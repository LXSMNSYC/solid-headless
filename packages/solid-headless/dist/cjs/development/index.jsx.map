{
  "version": 3,
  "sources": ["../../../src/index.ts", "../../../src/headless/Disclosure.tsx", "../../../src/utils/use-controlled-signal.ts", "../../../src/headless/Select.tsx", "../../../src/headless/Toggle.tsx", "../../../src/components/Transition.tsx", "../../../src/utils/dynamic-prop.ts", "../../../src/components/Disclosure.tsx", "../../../src/utils/Fragment.tsx", "../../../src/components/Button.tsx", "../../../src/components/Accordion.tsx", "../../../src/utils/query-nodes.ts", "../../../src/components/RadioGroup.tsx", "../../../src/components/Listbox.tsx", "../../../src/components/Dialog.tsx", "../../../src/utils/get-focusable-elements.ts", "../../../src/components/Toolbar.tsx", "../../../src/components/Select.tsx", "../../../src/components/Toggle.tsx", "../../../src/components/Popover.tsx", "../../../src/components/Alert.tsx", "../../../src/components/AlertDialog.tsx", "../../../src/components/Toast.tsx", "../../../src/components/Checkbox.tsx", "../../../src/components/Menu.tsx", "../../../src/components/ContextMenu.tsx", "../../../src/components/Feed.tsx", "../../../src/components/CommandBar.tsx", "../../../src/components/ColorScheme.tsx"],
  "sourcesContent": ["// Headless\nexport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureChildRenderProp,\n  HeadlessDisclosureOptions,\n  HeadlessDisclosureProperties,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  HeadlessDisclosureRootRenderProp,\n  useHeadlessDisclosure,\n  useHeadlessDisclosureChild,\n} from './headless/Disclosure';\nexport {\n  HeadlessSelectChild,\n  HeadlessSelectChildProps,\n  HeadlessSelectChildRenderProp,\n  HeadlessSelectOption,\n  HeadlessSelectOptionChild,\n  HeadlessSelectOptionChildProps,\n  HeadlessSelectOptionProperties,\n  HeadlessSelectOptionProps,\n  HeadlessSelectOptionRenderProp,\n  HeadlessSelectOptions,\n  HeadlessSelectProperties,\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectRootRenderProp,\n  useHeadlessSelect,\n  useHeadlessSelectChild,\n  useHeadlessSelectOption,\n  useHeadlessSelectOptionChild,\n} from './headless/Select';\nexport {\n  HeadlessToggleChild,\n  HeadlessToggleChildProps,\n  HeadlessToggleChildRenderProp,\n  HeadlessToggleOptions,\n  HeadlessToggleProperties,\n  HeadlessToggleRoot,\n  HeadlessToggleRootProps,\n  HeadlessToggleRootRenderProp,\n  useHeadlessToggle,\n  useHeadlessToggleChild,\n} from './headless/Toggle';\n\nexport {\n  Transition,\n  TransitionChild,\n  TransitionProps,\n  TransitionChildProps,\n} from './components/Transition';\nexport {\n  Disclosure,\n  DisclosureButton,\n  DisclosureButtonProps,\n  DisclosurePanel,\n  DisclosurePanelProps,\n  DisclosureProps,\n} from './components/Disclosure';\nexport {\n  Accordion,\n  AccordionButton,\n  AccordionButtonProps,\n  AccordionHeader,\n  AccordionHeaderProps,\n  AccordionItem,\n  AccordionItemProps,\n  AccordionPanel,\n  AccordionPanelProps,\n  AccordionProps,\n} from './components/Accordion';\nexport {\n  RadioGroup,\n  RadioGroupDescription,\n  RadioGroupDescriptionProps,\n  RadioGroupLabel,\n  RadioGroupLabelProps,\n  RadioGroupOption,\n  RadioGroupOptionProps,\n  RadioGroupProps,\n} from './components/RadioGroup';\nexport {\n  Listbox,\n  ListboxButton,\n  ListboxButtonProps,\n  ListboxLabel,\n  ListboxLabelProps,\n  ListboxOption,\n  ListboxOptionProps,\n  ListboxOptions,\n  ListboxOptionsProps,\n  ListboxProps,\n} from './components/Listbox';\nexport {\n  Dialog,\n  DialogProps,\n  DialogPanelProps,\n  DialogPanel,\n  DialogDescriptionProps,\n  DialogDescription,\n  DialogTitle,\n  DialogTitleProps,\n  DialogOverlay,\n  DialogOverlayProps,\n} from './components/Dialog';\nexport {\n  Toolbar,\n  ToolbarProps,\n} from './components/Toolbar';\nexport {\n  Select,\n  SelectOption,\n  SelectOptionProps,\n  SelectProps,\n} from './components/Select';\nexport {\n  Button,\n  ButtonProps,\n} from './components/Button';\nexport {\n  ToggleProps,\n  Toggle,\n} from './components/Toggle';\nexport {\n  Popover,\n  PopoverButton,\n  PopoverButtonProps,\n  PopoverPanel,\n  PopoverPanelProps,\n  PopoverProps,\n  PopoverOverlay,\n  PopoverOverlayProps,\n} from './components/Popover';\nexport {\n  default as Fragment,\n} from './utils/Fragment';\nexport {\n  Alert,\n  AlertProps,\n} from './components/Alert';\nexport {\n  AlertDialog,\n  AlertDialogDescription,\n  AlertDialogDescriptionProps,\n  AlertDialogOverlay,\n  AlertDialogOverlayProps,\n  AlertDialogPanel,\n  AlertDialogPanelProps,\n  AlertDialogProps,\n  AlertDialogTitle,\n  AlertDialogTitleProps,\n} from './components/AlertDialog';\nexport {\n  Toast,\n  Toaster,\n  ToastProps,\n  ToasterProps,\n  ToastData,\n  ToasterStore,\n  ToasterListener,\n  useToaster,\n} from './components/Toast';\nexport {\n  Checkbox,\n  CheckboxDescription,\n  CheckboxDescriptionProps,\n  CheckboxIndicator,\n  CheckboxIndicatorProps,\n  CheckboxLabel,\n  CheckboxLabelProps,\n  CheckboxProps,\n} from './components/Checkbox';\nexport {\n  Menu,\n  MenuItem,\n  MenuItemProps,\n  MenuProps,\n} from './components/Menu';\nexport {\n  ContextMenu,\n  ContextMenuBoundary,\n  ContextMenuBoundaryProps,\n  ContextMenuOverlay,\n  ContextMenuOverlayProps,\n  ContextMenuPanel,\n  ContextMenuPanelProps,\n  ContextMenuProps,\n} from './components/ContextMenu';\nexport {\n  FeedArticle,\n  FeedArticleDescription,\n  FeedArticleDescriptionProps,\n  FeedArticleLabel,\n  FeedArticleLabelProps,\n  FeedArticleProps,\n  FeedContent,\n  FeedContentProps,\n  FeedLabel,\n  FeedLabelProps,\n  FeedProps,\n  Feed,\n} from './components/Feed';\nexport {\n  CommandBar,\n  CommandBarDescription,\n  CommandBarDescriptionProps,\n  CommandBarOverlay,\n  CommandBarOverlayProps,\n  CommandBarPanel,\n  CommandBarPanelProps,\n  CommandBarTitle,\n  CommandBarProps,\n  CommandBarTitleProps,\n} from './components/CommandBar';\nexport {\n  ColorScheme,\n  ColorSchemeProvider,\n  ColorSchemeProviderProps,\n  useColorScheme,\n  useNativeColorScheme,\n  usePreferredColorScheme,\n} from './components/ColorScheme';\n", "import {\n  createContext,\n  JSX,\n  useContext,\n} from 'solid-js';\nimport useControlledSignal from '../utils/use-controlled-signal';\n\nexport interface HeadlessDisclosureOptions {\n  isOpen?: boolean;\n  defaultOpen?: boolean;\n  disabled?: boolean;\n  onChange?: (state: boolean) => void;\n  CONTROLLED?: boolean;\n}\n\nexport interface HeadlessDisclosureProperties {\n  isOpen(): boolean;\n  setState(newState: boolean): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessDisclosure(\n  options: HeadlessDisclosureOptions = {},\n): HeadlessDisclosureProperties {\n  const isControlled = 'CONTROLLED' in options ? options.CONTROLLED : 'isOpen' in options;\n\n  const [signal, setSignal] = useControlledSignal(\n    !!options.defaultOpen,\n    isControlled ? () => !!options.isOpen : undefined,\n    (value) => options.onChange?.(value),\n  );\n\n  return {\n    isOpen() {\n      return signal();\n    },\n    setState(value) {\n      if (!options.disabled) {\n        setSignal(value);\n      }\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n  };\n}\n\nconst HeadlessDisclosureContext = createContext<HeadlessDisclosureProperties>();\n\nexport type HeadlessDisclosureRootRenderProp = (\n  (properties: HeadlessDisclosureProperties) => JSX.Element\n);\n\nfunction isHeadlessDisclosureRootRenderProp(\n  children: HeadlessDisclosureRootRenderProp | JSX.Element,\n): children is HeadlessDisclosureRootRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessDisclosureRootProps extends HeadlessDisclosureOptions {\n  children?: HeadlessDisclosureRootRenderProp | JSX.Element;\n}\n\nexport function HeadlessDisclosureRoot(props: HeadlessDisclosureRootProps): JSX.Element {\n  const properties = useHeadlessDisclosure(props);\n  return (\n    <HeadlessDisclosureContext.Provider value={properties}>\n      {(() => {\n        const body = props.children;\n        if (isHeadlessDisclosureRootRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      })()}\n    </HeadlessDisclosureContext.Provider>\n  );\n}\n\nexport function useHeadlessDisclosureChild(): HeadlessDisclosureProperties {\n  const properties = useContext(HeadlessDisclosureContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useDisclosureChild` must be used within DisclosureRoot.');\n}\n\nexport type HeadlessDisclosureChildRenderProp = (\n  (properties: HeadlessDisclosureProperties) => JSX.Element\n);\n\nfunction isHeadlessDisclosureChildRenderProp(\n  children: HeadlessDisclosureChildRenderProp | JSX.Element,\n): children is HeadlessDisclosureChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessDisclosureChildProps {\n  children?: HeadlessDisclosureChildRenderProp | JSX.Element;\n}\n\nexport function HeadlessDisclosureChild(props: HeadlessDisclosureChildProps): JSX.Element {\n  const properties = useHeadlessDisclosureChild();\n  const body = props.children;\n  if (isHeadlessDisclosureChildRenderProp(body)) {\n    return body(properties);\n  }\n  return body;\n}\n", "import { Accessor, createSignal } from 'solid-js';\n\nexport default function useControlledSignal<T>(\n  initialValue: T,\n  read: Accessor<T> | undefined,\n  write: (value: T) => void,\n): [Accessor<T>, (value: T) => void] {\n  if (read) {\n    return [read, write];\n  }\n  const [signal, setSignal] = createSignal(initialValue);\n  return [\n    signal,\n    (value: T) => {\n      setSignal(() => value);\n      write(value);\n    },\n  ];\n}\n", "import {\n  createContext,\n  createSignal,\n  JSX,\n  untrack,\n  useContext,\n} from 'solid-js';\nimport { Ref } from '../utils/types';\nimport useControlledSignal from '../utils/use-controlled-signal';\n\nexport interface HeadlessSelectMultipleOptions<T> {\n  multiple: true;\n  toggleable?: boolean;\n  defaultValue?: T[];\n  value?: T[];\n  onChange?: (value: T[]) => void;\n  disabled?: boolean;\n  CONTROLLED?: boolean;\n}\n\nexport interface HeadlessSelectSingleOptions<T> {\n  multiple?: false;\n  toggleable?: boolean;\n  defaultValue?: T;\n  value?: T;\n  onChange?: (value?: T) => void;\n  disabled?: boolean;\n  CONTROLLED?: boolean;\n}\n\nexport type HeadlessSelectOptions<T> =\n  | HeadlessSelectSingleOptions<T>\n  | HeadlessSelectMultipleOptions<T>;\n\nexport interface HeadlessSelectProperties<T> {\n  isSelected(value: T): boolean;\n  select(value: T): void;\n  hasSelected(): boolean;\n  isActive(value: T): boolean;\n  hasActive(): boolean;\n  focus(value: T): void;\n  blur(): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessSelect<T>(\n  options: HeadlessSelectOptions<T>,\n): HeadlessSelectProperties<T> {\n  const [active, setActive] = createSignal<Ref<T>>();\n\n  if (options.multiple) {\n    const isControlled = 'CONTROLLED' in options ? options.CONTROLLED : 'value' in options;\n\n    const [selectedValues, setSelectedValues] = useControlledSignal(\n      options.defaultValue ?? [],\n      isControlled ? () => options.value ?? [] : undefined,\n      (value) => options.onChange?.(value ?? []),\n    );\n\n    return {\n      isSelected(value) {\n        return new Set(selectedValues()).has(value);\n      },\n      select(value) {\n        const set = new Set(untrack(selectedValues));\n        if (options.toggleable && set.has(value)) {\n          set.delete(value);\n        } else {\n          set.add(value);\n        }\n        setSelectedValues([\n          ...set,\n        ]);\n      },\n      hasSelected() {\n        return selectedValues().length > 0;\n      },\n      disabled() {\n        return !!options.disabled;\n      },\n      hasActive() {\n        return !!active();\n      },\n      isActive(value) {\n        const ref = active();\n        if (ref) {\n          return Object.is(value, ref.value);\n        }\n        return false;\n      },\n      focus(value) {\n        return setActive({\n          value,\n        });\n      },\n      blur() {\n        return setActive(undefined);\n      },\n    };\n  }\n\n  const isControlled = 'CONTROLLED' in options ? options.CONTROLLED : 'value' in options;\n\n  const [selectedValue, setSelectedValue] = useControlledSignal(\n    options.defaultValue ?? undefined,\n    isControlled ? (() => options.value) : undefined,\n    (value) => options.onChange?.(value),\n  );\n\n  return {\n    isSelected(value) {\n      return Object.is(value, selectedValue());\n    },\n    select(value) {\n      if (options.toggleable && Object.is(untrack(selectedValue), value)) {\n        setSelectedValue(undefined);\n      } else {\n        setSelectedValue(value);\n      }\n    },\n    hasSelected() {\n      return selectedValue() != null;\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n    hasActive() {\n      return !!active();\n    },\n    isActive(value) {\n      const ref = active();\n      if (ref) {\n        return Object.is(value, ref.value);\n      }\n      return false;\n    },\n    focus(value) {\n      return setActive({\n        value,\n      });\n    },\n    blur() {\n      return setActive(undefined);\n    },\n  };\n}\n\nconst HeadlessSelectContext = createContext<HeadlessSelectProperties<any>>();\n\nexport type HeadlessSelectRootRenderProp<T> = (\n  (properties: HeadlessSelectProperties<T>) => JSX.Element\n);\n\nfunction isHeadlessSelectRootRenderProp<T>(\n  children: HeadlessSelectRootRenderProp<T> | JSX.Element,\n): children is HeadlessSelectRootRenderProp<T> {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport type HeadlessSelectRootProps<T> = {\n  children?: HeadlessSelectRootRenderProp<T> | JSX.Element;\n} & HeadlessSelectOptions<T>;\n\nexport function HeadlessSelectRoot<T>(props: HeadlessSelectRootProps<T>): JSX.Element {\n  const properties = useHeadlessSelect(props);\n  return (\n    <HeadlessSelectContext.Provider value={properties}>\n      {(() => {\n        const body = props.children;\n        if (isHeadlessSelectRootRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      })()}\n    </HeadlessSelectContext.Provider>\n  );\n}\n\nexport function useHeadlessSelectChild<T>(): HeadlessSelectProperties<T> {\n  const properties = useContext(HeadlessSelectContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessSelectChild` must be used within HeadlessSelectRoot.');\n}\n\nexport type HeadlessSelectChildRenderProp<T> = (\n  (properties: HeadlessSelectProperties<T>) => JSX.Element\n);\n\nfunction isHeadlessSelectChildRenderProp<T>(\n  children: HeadlessSelectChildRenderProp<T> | JSX.Element,\n): children is HeadlessSelectChildRenderProp<T> {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessSelectChildProps<T> {\n  children?: HeadlessSelectChildRenderProp<T> | JSX.Element;\n}\n\nexport function HeadlessSelectChild<T>(props: HeadlessSelectChildProps<T>): JSX.Element {\n  const properties = useHeadlessSelectChild<T>();\n  const body = props.children;\n  if (isHeadlessSelectChildRenderProp(body)) {\n    return body(properties);\n  }\n  return body;\n}\n\nexport interface HeadlessSelectOptionProperties {\n  isSelected(): boolean;\n  select(): void;\n  isActive(): boolean;\n  focus(): void;\n  blur(): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessSelectOption<T>(\n  value: () => T,\n  disabled?: () => boolean,\n): HeadlessSelectOptionProperties {\n  const properties = useHeadlessSelectChild<T>();\n  const isDisabled = () => disabled?.() || properties.disabled();\n  return {\n    isSelected() {\n      return properties.isSelected(value());\n    },\n    isActive() {\n      return properties.isActive(value());\n    },\n    select() {\n      if (!isDisabled()) {\n        properties.select(value());\n      }\n    },\n    focus() {\n      if (!isDisabled()) {\n        properties.focus(value());\n      }\n    },\n    blur() {\n      if (!isDisabled() && this.isActive()) {\n        properties.blur();\n      }\n    },\n    disabled: isDisabled,\n  };\n}\n\nexport type HeadlessSelectOptionRenderProp = (\n  (properties: HeadlessSelectOptionProperties) => JSX.Element\n);\n\nfunction isHeadlessSelectOptionRenderProp(\n  children: HeadlessSelectOptionRenderProp | JSX.Element,\n): children is HeadlessSelectOptionRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nconst HeadlessSelectOptionContext = createContext<HeadlessSelectOptionProperties>();\n\nexport interface HeadlessSelectOptionProps<T> {\n  value: T;\n  disabled?: boolean,\n  children?: HeadlessSelectOptionRenderProp | JSX.Element;\n}\n\nexport function HeadlessSelectOption<T>(\n  props: HeadlessSelectOptionProps<T>,\n): JSX.Element {\n  const properties = useHeadlessSelectOption(\n    () => props.value,\n    () => !!props.disabled,\n  );\n  return (\n    <HeadlessSelectOptionContext.Provider value={properties}>\n      {(() => {\n        const body = props.children;\n        if (isHeadlessSelectOptionRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      })()}\n    </HeadlessSelectOptionContext.Provider>\n  );\n}\n\nexport function useHeadlessSelectOptionChild(): HeadlessSelectOptionProperties {\n  const properties = useContext(HeadlessSelectOptionContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessSelectChild` must be used within HeadlessSelectOption');\n}\n\nexport interface HeadlessSelectOptionChildProps {\n  children?: HeadlessSelectOptionRenderProp | JSX.Element;\n}\n\nexport function HeadlessSelectOptionChild(\n  props: HeadlessSelectOptionChildProps,\n): JSX.Element {\n  const properties = useHeadlessSelectOptionChild();\n  const body = props.children;\n  if (isHeadlessSelectOptionRenderProp(body)) {\n    return body(properties);\n  }\n  return body;\n}\n", "import {\n  createContext,\n  JSX,\n  useContext,\n} from 'solid-js';\nimport useControlledSignal from '../utils/use-controlled-signal';\n\nexport interface HeadlessToggleOptions {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  disabled?: boolean;\n  onChange?: (state?: boolean) => void;\n  CONTROLLED?: boolean;\n}\n\nexport interface HeadlessToggleProperties {\n  checked(): boolean | undefined;\n  setState(newState?: boolean): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessToggle(\n  options: HeadlessToggleOptions = {},\n): HeadlessToggleProperties {\n  const isControlled = 'CONTROLLED' in options ? options.CONTROLLED : 'checked' in options;\n\n  const [signal, setSignal] = useControlledSignal(\n    options.defaultChecked,\n    isControlled ? () => options.checked : undefined,\n    (value) => options.onChange?.(value),\n  );\n\n  return {\n    checked() {\n      return signal();\n    },\n    setState(value) {\n      if (!options.disabled) {\n        setSignal(value);\n        options.onChange?.(value);\n      }\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n  };\n}\n\nconst HeadlessToggleContext = createContext<HeadlessToggleProperties>();\n\nexport type HeadlessToggleRootRenderProp = (\n  (properties: HeadlessToggleProperties) => JSX.Element\n);\n\nfunction isHeadlessToggleRootRenderProp(\n  children: HeadlessToggleRootRenderProp | JSX.Element,\n): children is HeadlessToggleRootRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessToggleRootProps extends HeadlessToggleOptions {\n  children?: HeadlessToggleRootRenderProp | JSX.Element;\n}\n\nexport function HeadlessToggleRoot(props: HeadlessToggleRootProps): JSX.Element {\n  const properties = useHeadlessToggle(props);\n  return (\n    <HeadlessToggleContext.Provider value={properties}>\n      {(() => {\n        const body = props.children;\n        if (isHeadlessToggleRootRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      })()}\n    </HeadlessToggleContext.Provider>\n  );\n}\n\nexport function useHeadlessToggleChild(): HeadlessToggleProperties {\n  const properties = useContext(HeadlessToggleContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useToggleChild` must be used within ToggleRoot.');\n}\n\nexport type HeadlessToggleChildRenderProp = (\n  (properties: HeadlessToggleProperties) => JSX.Element\n);\n\nfunction isHeadlessToggleChildRenderProp(\n  children: HeadlessToggleChildRenderProp | JSX.Element,\n): children is HeadlessToggleChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessToggleChildProps {\n  children?: HeadlessToggleChildRenderProp | JSX.Element;\n}\n\nexport function HeadlessToggleChild(props: HeadlessToggleChildProps): JSX.Element {\n  const properties = useHeadlessToggleChild();\n  const body = props.children;\n  if (isHeadlessToggleChildRenderProp(body)) {\n    return body(properties);\n  }\n  return body;\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  Show,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\n\ninterface TransitionRootContext {\n  show: boolean;\n}\n\nconst TransitionRootContext = createContext<TransitionRootContext>();\n\nfunction useTransitionRootContext(componentName: string): TransitionRootContext {\n  const context = useContext(TransitionRootContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Transition>`);\n}\n\nexport type TransitionBaseChildProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n  appear?: boolean;\n  enter?: string;\n  enterFrom?: string;\n  enterTo?: string;\n  entered?: string;\n  leave?: string;\n  leaveFrom?: string;\n  leaveTo?: string;\n  beforeEnter?: () => void;\n  afterEnter?: () => void;\n  beforeLeave?: () => void;\n  afterLeave?: () => void;\n};\n\nfunction addClassList(ref: HTMLElement, classes: string[]) {\n  const filtered = classes.filter((value) => value);\n  if (filtered.length) {\n    ref.classList.add(...filtered);\n  }\n}\nfunction removeClassList(ref: HTMLElement, classes: string[]) {\n  const filtered = classes.filter((value) => value);\n  if (filtered.length) {\n    ref.classList.remove(...filtered);\n  }\n}\n\nexport type TransitionChildProps<T extends ValidConstructor = 'div'> =\n  TransitionBaseChildProps<T>\n    & WithRef<T>\n    & Omit<DynamicProps<T>, keyof TransitionBaseChildProps<T>>;\n\nexport function TransitionChild<T extends ValidConstructor = 'div'>(\n  props: TransitionChildProps<T>,\n): JSX.Element {\n  const values = useTransitionRootContext('TransitionChild');\n\n  const [visible, setVisible] = createSignal(values.show);\n  const [ref, setRef] = createSignal<DynamicNode<T>>();\n\n  let initial = true;\n\n  function transition(element: HTMLElement, shouldEnter: boolean): void {\n    if (shouldEnter) {\n      if (initial) {\n        const enter = props.enter?.split(' ') ?? [];\n        const enterFrom = props.enterFrom?.split(' ') ?? [];\n        const enterTo = props.enterTo?.split(' ') ?? [];\n        const entered = props.entered?.split(' ') ?? [];\n\n        const endTransition = () => {\n          removeClassList(element, enter);\n          removeClassList(element, enterTo);\n          addClassList(element, entered);\n          props.afterEnter?.();\n        };\n\n        props.beforeEnter?.();\n        addClassList(element, enter);\n        addClassList(element, enterFrom);\n\n        requestAnimationFrame(() => {\n          removeClassList(element, enterFrom);\n          addClassList(element, enterTo);\n          element.addEventListener('transitionend', endTransition, { once: true });\n          element.addEventListener('animationend', endTransition, { once: true });\n        });\n      }\n    } else {\n      const leave = props.leave?.split(' ') ?? [];\n      const leaveFrom = props.leaveFrom?.split(' ') ?? [];\n      const leaveTo = props.leaveTo?.split(' ') ?? [];\n      const entered = props.entered?.split(' ') ?? [];\n      props.beforeLeave?.();\n      removeClassList(element, entered);\n      addClassList(element, leave);\n      addClassList(element, leaveFrom);\n      requestAnimationFrame(() => {\n        removeClassList(element, leaveFrom);\n        addClassList(element, leaveTo);\n      });\n      const endTransition = () => {\n        removeClassList(element, leave);\n        removeClassList(element, leaveTo);\n        setVisible(false);\n        props.afterLeave?.();\n      };\n      element.addEventListener('transitionend', endTransition, { once: true });\n      element.addEventListener('animationend', endTransition, { once: true });\n    }\n  }\n\n  createEffect(() => {\n    const shouldShow = values.show;\n\n    if (shouldShow) {\n      setVisible(true);\n    }\n\n    const internalRef = ref();\n    if (internalRef instanceof HTMLElement) {\n      transition(internalRef, shouldShow);\n    } else {\n      // Ref is missing, reset initial\n      initial = true;\n    }\n  });\n\n  return (\n    <Show\n      when={props.unmount ?? true}\n      fallback={(\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'enter',\n            'enterFrom',\n            'enterTo',\n            'leave',\n            'leaveFrom',\n            'leaveTo',\n            'unmount',\n            'afterEnter',\n            'afterLeave',\n            'appear',\n            'beforeEnter',\n            'beforeLeave',\n            'entered',\n            'ref',\n          ])}\n          ref={createRef(props, (e) => {\n            setRef(() => e);\n          })}\n        >\n          {props.children}\n        </Dynamic>\n      )}\n    >\n      <Show when={visible()}>\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'enter',\n            'enterFrom',\n            'enterTo',\n            'leave',\n            'leaveFrom',\n            'leaveTo',\n            'unmount',\n            'afterEnter',\n            'afterLeave',\n            'appear',\n            'beforeEnter',\n            'beforeLeave',\n            'entered',\n            'ref',\n          ])}\n          ref={createRef(props, (e) => {\n            setRef(() => e);\n          })}\n        >\n          {props.children}\n        </Dynamic>\n      </Show>\n    </Show>\n  );\n}\n\nexport type TransitionProps<T extends ValidConstructor = 'div'> = {\n  show: boolean;\n  appear?: boolean;\n} & TransitionChildProps<T>;\n\nexport function Transition<T extends ValidConstructor = 'div'>(\n  props: TransitionProps<T>,\n): JSX.Element {\n  const excludedProps = omitProps(props, [\n    'show',\n  ]);\n  return (\n    <TransitionRootContext.Provider\n      value={{\n        get show() {\n          return props.show;\n        },\n      }}\n    >\n      <TransitionChild\n        {...excludedProps}\n      />\n    </TransitionRootContext.Provider>\n  );\n}\n", "import { JSX } from 'solid-js/jsx-runtime';\n\nexport type ValidElements = keyof JSX.IntrinsicElements;\nexport type ValidComponent<P> = (props: P) => JSX.Element;\nexport type ValidConstructor = ValidElements | ValidComponent<any>;\n\nexport type DynamicProps<T extends ValidConstructor> =\n  T extends ValidElements\n    ? JSX.IntrinsicElements[T]\n    :\n  T extends ValidComponent<infer U>\n    ? U\n    : never;\n\ntype UnboxIntrinsicElements<T> =\n  T extends JSX.HTMLAttributes<infer U>\n    ? U\n    : never;\n\ntype RefCallback<T> = (el: T) => void;\ntype RefField<T> = T | RefCallback<T>;\n\ntype UnboxComponentProp<U> =\n  U extends { ref: infer X }\n    ? X\n    : never;\n\nexport type DynamicNode<T extends ValidConstructor> =\n  T extends ValidElements\n    ? UnboxIntrinsicElements<JSX.IntrinsicElements[T]>\n    :\n  T extends ValidComponent<infer U>\n    ? UnboxComponentProp<U>\n    : never;\n\nexport interface WithRef<T extends ValidConstructor> {\n  ref?: RefField<DynamicNode<T>>;\n}\n\nfunction isRefFunction<U extends ValidConstructor>(\n  callback?: RefField<DynamicNode<U>>,\n): callback is RefCallback<DynamicNode<U>> {\n  return typeof callback === 'function';\n}\n\nexport function createRef<U extends ValidConstructor>(\n  props: WithRef<U>,\n  callback: RefCallback<DynamicNode<U>>,\n): RefCallback<DynamicNode<U>> {\n  return (e) => {\n    if ('ref' in props) {\n      if (isRefFunction(props.ref)) {\n        props.ref(e);\n      } else {\n        props.ref = e;\n      }\n    }\n    callback(e);\n  };\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  Show,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport Fragment from '../utils/Fragment';\nimport {\n  Button,\n  ButtonProps,\n} from './Button';\n\ninterface DisclosureContext {\n  ownerID: string;\n  buttonID: string;\n  panelID: string;\n}\n\nconst DisclosureContext = createContext<DisclosureContext>();\n\nfunction useDisclosureContext(componentName: string): DisclosureContext {\n  const context = useContext(DisclosureContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Disclosure>`);\n}\n\nexport type DisclosureProps<T extends ValidConstructor = typeof Fragment> = {\n  as?: T;\n} & HeadlessDisclosureRootProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps>;\n\nexport function Disclosure<T extends ValidConstructor = typeof Fragment>(\n  props: DisclosureProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  return (\n    <DisclosureContext.Provider\n      value={{\n        ownerID,\n        buttonID,\n        panelID,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? Fragment}\n        {...omitProps(props, [\n          'isOpen',\n          'as',\n          'children',\n          'disabled',\n          'defaultOpen',\n          'onChange',\n        ])}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n        data-sh-disclosure={ownerID}\n      >\n        <HeadlessDisclosureRoot\n          CONTROLLED={'isOpen' in props}\n          isOpen={props.isOpen}\n          onChange={props.onChange}\n          disabled={props.disabled}\n          defaultOpen={props.defaultOpen}\n        >\n          {props.children}\n        </HeadlessDisclosureRoot>\n      </Dynamic>\n    </DisclosureContext.Provider>\n  );\n}\n\nexport type DisclosureButtonProps<T extends ValidConstructor = 'button'> = {\n  as?: T;\n} & Omit<HeadlessDisclosureChildProps, 'CONTROLLED'>\n  & WithRef<T>\n  & Omit<ButtonProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function DisclosureButton<T extends ValidConstructor = 'button'>(\n  props: DisclosureButtonProps<T>,\n): JSX.Element {\n  const context = useDisclosureContext('DisclosureButton');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.setState(!properties.isOpen());\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      {...omitProps(props, [\n        'children',\n        'ref',\n      ])}\n      id={context.buttonID}\n      aria-disabled={properties.disabled() || props.disabled}\n      aria-expanded={properties.isOpen()}\n      aria-controls={properties.isOpen() && context.panelID}\n      data-sh-expanded={properties.isOpen()}\n      data-sh-disabled={properties.disabled() || props.disabled}\n      disabled={properties.disabled() || props.disabled}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n      data-sh-disclosure-button={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type DisclosurePanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function DisclosurePanel<T extends ValidConstructor = 'div'>(\n  props: DisclosurePanelProps<T>,\n): JSX.Element {\n  const context = useDisclosureContext('DisclosurePanel');\n  const properties = useHeadlessDisclosureChild();\n  return (\n    <Show\n      when={props.unmount ?? true}\n      fallback={(\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'unmount',\n            'children',\n          ])}\n          id={context.panelID}\n          data-sh-disclosure-panel={context.ownerID}\n        >\n          <HeadlessDisclosureChild>\n            {props.children}\n          </HeadlessDisclosureChild>\n        </Dynamic>\n      )}\n    >\n      <Show when={properties.isOpen()}>\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'unmount',\n            'children',\n          ])}\n          id={context.panelID}\n          data-sh-disclosure-panel={context.ownerID}\n        >\n          <HeadlessDisclosureChild>\n            {props.children}\n          </HeadlessDisclosureChild>\n        </Dynamic>\n      </Show>\n    </Show>\n  );\n}\n", "import { JSX } from 'solid-js/jsx-runtime';\n\nexport interface FragmentProps {\n  children?: JSX.Element;\n}\n\nexport default function Fragment(props: FragmentProps): JSX.Element {\n  return props.children;\n}\n", "import {\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n} from 'solid-js';\nimport {\n  JSX,\n} from 'solid-js/jsx-runtime';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\n\nexport type ButtonProps<T extends ValidConstructor = 'button'> = {\n  as?: T,\n  disabled?: boolean;\n} & WithRef<T> & Omit<DynamicProps<T>, 'as' | 'disabled' | 'ref'>;\n\nexport function Button<T extends ValidConstructor = 'button'>(\n  props: ButtonProps<T>,\n): JSX.Element {\n  const buttonID = createUniqueId();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      // This behavior is redundant for buttons\n      if (ref.tagName !== 'BUTTON') {\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            ref.click();\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return (\n    <Dynamic\n      component={props.as ?? 'button'}\n      id={buttonID}\n      tabindex={0}\n      role=\"button\"\n      disabled={props.disabled}\n      {...omitProps(props, [\n        'as',\n        'disabled',\n        'ref',\n      ])}\n      aria-disabled={props.disabled}\n      data-sh-disabled={props.disabled}\n      data-sh-button={buttonID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    />\n  );\n}\n", "import {\n  createContext,\n  createUniqueId,\n  useContext,\n  Show,\n  createEffect,\n  onCleanup,\n  createSignal,\n} from 'solid-js';\nimport { JSX } from 'solid-js/jsx-runtime';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectOption,\n  HeadlessSelectOptionChild,\n  HeadlessSelectOptionChildProps,\n  HeadlessSelectOptionProps,\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  useHeadlessSelectOptionChild,\n} from '../headless/Select';\nimport {\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n  createRef,\n  DynamicNode,\n} from '../utils/dynamic-prop';\nimport {\n  queryAccordionButtons,\n} from '../utils/query-nodes';\nimport {\n  Button,\n  ButtonProps,\n} from './Button';\n\ninterface AccordionContext {\n  ownerID: string;\n  setChecked: (node: Element) => void;\n  setPrevChecked: (node: Element) => void;\n  setNextChecked: (node: Element) => void;\n  setFirstChecked: () => void;\n  setLastChecked: () => void;\n}\n\nconst AccordionContext = createContext<AccordionContext>();\n\nfunction useAccordionContext(componentName: string): AccordionContext {\n  const context = useContext(AccordionContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Accordion>`);\n}\n\ninterface AccordionItemContext {\n  buttonID: string;\n  panelID: string;\n}\n\nconst AccordionItemContext = createContext<AccordionItemContext>();\n\nfunction useAccordionItemContext(componentName: string): AccordionItemContext {\n  const context = useContext(AccordionItemContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <AccordionItem>`);\n}\n\nexport type AccordionProps<V, T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & Omit<HeadlessSelectRootProps<V>, 'CONTROLLED'>\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessSelectRootProps<V>>;\n\nexport function Accordion<V, T extends ValidConstructor = 'div'>(\n  props: AccordionProps<V, T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n\n  let internalRef: DynamicNode<T>;\n\n  function setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  function setNextChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const radios = queryAccordionButtons(internalRef, ownerID);\n      for (let i = 0, len = radios.length; i < len; i += 1) {\n        if (node === radios[i]) {\n          if (i === len - 1) {\n            setChecked(radios[0]);\n          } else {\n            setChecked(radios[i + 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setPrevChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const radios = queryAccordionButtons(internalRef, ownerID);\n      for (let i = 0, len = radios.length; i < len; i += 1) {\n        if (node === radios[i]) {\n          if (i === 0) {\n            setChecked(radios[len - 1]);\n          } else {\n            setChecked(radios[i - 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setFirstChecked() {\n    if (internalRef instanceof HTMLElement) {\n      const radios = queryAccordionButtons(internalRef, ownerID);\n      setChecked(radios[0]);\n    }\n  }\n\n  function setLastChecked() {\n    if (internalRef instanceof HTMLElement) {\n      const radios = queryAccordionButtons(internalRef, ownerID);\n      setChecked(radios[radios.length - 1]);\n    }\n  }\n\n  return (\n    <AccordionContext.Provider\n      value={{\n        ownerID,\n        setChecked,\n        setNextChecked,\n        setPrevChecked,\n        setFirstChecked,\n        setLastChecked,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'as',\n          'children',\n          'disabled',\n          'defaultValue',\n          'onChange',\n          'multiple',\n          'toggleable',\n          'value',\n          'ref',\n        ])}\n        ref={createRef(props, (e) => {\n          internalRef = e;\n        })}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n        data-sh-accordion={ownerID}\n      >\n        <HeadlessSelectRoot\n          CONTROLLED={'value' in props}\n          multiple={props.multiple}\n          value={props.value}\n          defaultValue={props.defaultValue}\n          toggleable={props.toggleable}\n          disabled={props.disabled}\n          onChange={props.onChange}\n        >\n          {props.children}\n        </HeadlessSelectRoot>\n      </Dynamic>\n    </AccordionContext.Provider>\n  );\n}\n\nexport type AccordionItemProps<V, T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessSelectOptionProps<V>\n  & Omit<DynamicProps<T>, keyof HeadlessSelectOptionProps<V>>;\n\nexport function AccordionItem<V, T extends ValidConstructor = 'div'>(\n  props: AccordionItemProps<V, T>,\n): JSX.Element {\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  return (\n    <AccordionItemContext.Provider\n      value={{\n        buttonID,\n        panelID,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'as',\n          'children',\n          'value',\n          'disabled',\n        ])}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n      >\n        <HeadlessSelectOption\n          value={props.value}\n          disabled={props.disabled}\n        >\n          {props.children}\n        </HeadlessSelectOption>\n      </Dynamic>\n    </AccordionItemContext.Provider>\n  );\n}\n\nexport type AccordionHeaderProps<T extends ValidConstructor = 'h3'> = {\n  as?: T;\n} & HeadlessSelectOptionChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessSelectOptionChildProps>;\n\nexport function AccordionHeader<T extends ValidConstructor = 'h3'>(\n  props: AccordionHeaderProps<T>,\n): JSX.Element {\n  return (\n    <Dynamic\n      component={props.as ?? 'h3'}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n    >\n      <HeadlessSelectOptionChild>\n        {props.children}\n      </HeadlessSelectOptionChild>\n    </Dynamic>\n  );\n}\n\nexport type AccordionButtonProps<T extends ValidConstructor = 'button'> = {\n  as?: T;\n} & HeadlessSelectOptionChildProps\n  & WithRef<T>\n  & Omit<ButtonProps<T>, keyof HeadlessSelectOptionChildProps>;\n\nexport function AccordionButton<T extends ValidConstructor = 'button'>(\n  props: AccordionButtonProps<T>,\n): JSX.Element {\n  const rootContext = useAccordionContext('AccordionButton');\n  const itemContext = useAccordionItemContext('AccordionButton');\n  const properties = useHeadlessSelectOptionChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowUp':\n              e.preventDefault();\n              rootContext.setPrevChecked(ref);\n              break;\n            case 'ArrowDown':\n              e.preventDefault();\n              rootContext.setNextChecked(ref);\n              break;\n            case 'Home':\n              e.preventDefault();\n              rootContext.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              rootContext.setLastChecked();\n              break;\n            default:\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.select();\n        }\n      };\n      const onFocus = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.focus();\n        }\n      };\n      const onBlur = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      {...omitProps(props, [\n        'children',\n        'ref',\n        'disabled',\n        'as',\n      ])}\n      id={itemContext.buttonID}\n      aria-expanded={properties.isSelected()}\n      aria-controls={properties.isSelected() && itemContext.panelID}\n      aria-disabled={properties.disabled() || props.disabled}\n      data-sh-disabled={properties.disabled() || props.disabled}\n      data-sh-expanded={properties.isSelected()}\n      data-sh-active={properties.isActive()}\n      disabled={properties.disabled() || props.disabled}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n      data-sh-accordion-button={rootContext.ownerID}\n    >\n      <HeadlessSelectOptionChild>\n        {props.children}\n      </HeadlessSelectOptionChild>\n    </Dynamic>\n  );\n}\n\nexport type AccordionPanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n} & HeadlessSelectOptionChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessSelectOptionChildProps>;\n\nexport function AccordionPanel<T extends ValidConstructor = 'div'>(\n  props: AccordionPanelProps<T>,\n): JSX.Element {\n  const context = useAccordionItemContext('AccordionPanel');\n  const properties = useHeadlessSelectOptionChild();\n\n  return (\n    <Show\n      when={props.unmount ?? true}\n      fallback={(\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'children',\n            'unmount',\n          ])}\n          id={context.panelID}\n          aria-labelledby={context.buttonID}\n        >\n          <HeadlessSelectOptionChild>\n            {props.children}\n          </HeadlessSelectOptionChild>\n        </Dynamic>\n      )}\n    >\n      <Show when={properties.isSelected()}>\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'children',\n            'unmount',\n          ])}\n          id={context.panelID}\n          aria-labelledby={context.buttonID}\n        >\n          <HeadlessSelectOptionChild>\n            {props.children}\n          </HeadlessSelectOptionChild>\n        </Dynamic>\n      </Show>\n    </Show>\n  );\n}\n", "export default function queryNodes<T extends Element>(\n  el: T,\n  tag: string,\n  ownerID: string,\n): NodeListOf<Element> {\n  return el.querySelectorAll(`[data-sh-${tag}=\"${ownerID}\"]`);\n}\n\nconst ACCORDION_BUTTON = 'accordion-button';\n\nexport function queryAccordionButtons<E extends Element>(\n  el: E,\n  ownerID: string,\n): NodeListOf<Element> {\n  return queryNodes(el, ACCORDION_BUTTON, ownerID);\n}\n\nconst LISTBOX_OPTION = 'listbox-option';\n\nexport function queryListboxOptions<E extends Element>(\n  el: E,\n  ownerID: string,\n): NodeListOf<Element> {\n  return queryNodes(el, LISTBOX_OPTION, ownerID);\n}\n\nconst MENU_ITEM = 'menu-item';\n\nexport function queryMenuItems<E extends Element>(\n  el: E,\n  ownerID: string,\n): NodeListOf<Element> {\n  return queryNodes(el, MENU_ITEM, ownerID);\n}\n\nconst RADIO = 'radio';\n\nexport function queryRadios<E extends Element>(\n  el: E,\n  ownerID: string,\n): NodeListOf<Element> {\n  return queryNodes(el, RADIO, ownerID);\n}\n\nconst SELECT_OPTION = 'select-option';\n\nexport function querySelectOptions<E extends Element>(\n  el: E,\n  ownerID: string,\n): NodeListOf<Element> {\n  return queryNodes(el, SELECT_OPTION, ownerID);\n}\n\nconst FEED_ARTICLE = 'feed-article';\n\nexport function queryFeedArticles<E extends Element>(\n  el: E,\n  ownerID: string,\n): NodeListOf<Element> {\n  return queryNodes(el, FEED_ARTICLE, ownerID);\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectOption,\n  HeadlessSelectOptionProps,\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  useHeadlessSelectChild,\n} from '../headless/Select';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport { queryRadios } from '../utils/query-nodes';\n\ninterface RadioGroupContext {\n  labelID: string;\n  descriptionID: string;\n}\n\nconst RadioGroupContext = createContext<RadioGroupContext>();\n\nfunction useRadioGroupContext(componentName: string): RadioGroupContext {\n  const context = useContext(RadioGroupContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <RadioGroup> or <RadioGroupOption>`);\n}\n\ninterface RadioGroupRootContext {\n  ownerID: string;\n  setChecked: (node: Element) => void;\n  setPrevChecked: (node: Element) => void;\n  setNextChecked: (node: Element) => void;\n}\n\nconst RadioGroupRootContext = createContext<RadioGroupRootContext>();\n\nfunction useRadioGroupRootContext(componentName: string): RadioGroupRootContext {\n  const context = useContext(RadioGroupRootContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <RadioGroup>`);\n}\n\nexport type RadioGroupProps<V, T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & Omit<HeadlessSelectRootProps<V>, 'multiple' | 'toggleable' | 'CONTROLLED'>\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessSelectRootProps<V>>;\n\nexport function RadioGroup<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupProps<V, T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const descriptionID = createUniqueId();\n  const labelID = createUniqueId();\n\n  let internalRef: DynamicNode<T>;\n\n  function setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  function setNextChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const radios = queryRadios(internalRef, ownerID);\n      for (let i = 0, len = radios.length; i < len; i += 1) {\n        if (node === radios[i]) {\n          if (i === len - 1) {\n            setChecked(radios[0]);\n          } else {\n            setChecked(radios[i + 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setPrevChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const radios = queryRadios(internalRef, ownerID);\n      for (let i = 0, len = radios.length; i < len; i += 1) {\n        if (node === radios[i]) {\n          if (i === 0) {\n            setChecked(radios[len - 1]);\n          } else {\n            setChecked(radios[i - 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return (\n    <RadioGroupRootContext.Provider\n      value={{\n        ownerID,\n        setChecked,\n        setNextChecked,\n        setPrevChecked,\n      }}\n    >\n      <RadioGroupContext.Provider\n        value={{\n          descriptionID,\n          labelID,\n        }}\n      >\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'children',\n            'value',\n            'disabled',\n            'onChange',\n            'ref',\n            'defaultValue',\n          ])}\n          role=\"radiogroup\"\n          aria-labelledby={labelID}\n          aria-describedby={descriptionID}\n          aria-disabled={props.disabled}\n          data-sh-disabled={props.disabled}\n          disabled={props.disabled}\n          ref={createRef(props, (e) => {\n            internalRef = e;\n          })}\n          data-sh-radiogroup={ownerID}\n        >\n          <HeadlessSelectRoot\n            CONTROLLED={'value' in props}\n            defaultValue={props.defaultValue}\n            value={props.value}\n            disabled={props.disabled}\n            onChange={props.onChange}\n          >\n            {props.children}\n          </HeadlessSelectRoot>\n        </Dynamic>\n      </RadioGroupContext.Provider>\n    </RadioGroupRootContext.Provider>\n  );\n}\n\nexport type RadioGroupOptionProps<V, T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & Omit<HeadlessSelectOptionProps<V>, 'multiple'>\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessSelectOptionProps<V>>;\n\nexport function RadioGroupOption<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupOptionProps<V, T>,\n): JSX.Element {\n  const context = useRadioGroupRootContext('RadioGroupOption');\n  const properties = useHeadlessSelectChild<V>();\n\n  const descriptionID = createUniqueId();\n  const labelID = createUniqueId();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowLeft':\n            case 'ArrowUp':\n              e.preventDefault();\n              context.setPrevChecked(ref);\n              break;\n            case 'ArrowRight':\n            case 'ArrowDown':\n              e.preventDefault();\n              context.setNextChecked(ref);\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              context.setChecked(ref);\n              break;\n            default:\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.select(props.value);\n        }\n      };\n      const onFocus = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.focus(props.value);\n          properties.select(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  return (\n    <RadioGroupContext.Provider\n      value={{\n        descriptionID,\n        labelID,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'as',\n          'children',\n          'value',\n          'disabled',\n          'ref',\n        ])}\n        ref={createRef(props, (e) => {\n          setInternalRef(() => e);\n        })}\n        role=\"radio\"\n        disabled={props.disabled}\n        tabindex={properties.isSelected(props.value) ? 0 : -1}\n        aria-disabled={props.disabled}\n        aria-checked={properties.isSelected(props.value)}\n        aria-labelledby={labelID}\n        aria-describedby={descriptionID}\n        data-sh-radio={context.ownerID}\n        data-sh-checked={properties.isSelected(props.value)}\n        data-sh-disabled={props.disabled}\n      >\n        <HeadlessSelectOption\n          value={props.value}\n          disabled={props.disabled}\n        >\n          {props.children}\n        </HeadlessSelectOption>\n      </Dynamic>\n    </RadioGroupContext.Provider>\n  );\n}\n\nexport type RadioGroupLabelProps<T extends ValidConstructor = 'label'> = {\n  as?: T;\n} & Omit<DynamicProps<T>, 'as'>;\n\nexport function RadioGroupLabel<T extends ValidConstructor = 'label'>(\n  props: RadioGroupLabelProps<T>,\n): JSX.Element {\n  const context = useRadioGroupContext('RadioGroupLabel');\n  return (\n    <Dynamic\n      component={props.as ?? 'label'}\n      {...omitProps(props, [\n        'as',\n      ])}\n      id={context.labelID}\n    >\n      {props.children}\n    </Dynamic>\n  );\n}\n\nexport type RadioGroupDescriptionProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & Omit<DynamicProps<T>, 'as'>;\n\nexport function RadioGroupDescription<T extends ValidConstructor = 'div'>(\n  props: RadioGroupDescriptionProps<T>,\n): JSX.Element {\n  const context = useRadioGroupContext('RadioGroupLabel');\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      {...omitProps(props, [\n        'as',\n      ])}\n      id={context.descriptionID}\n    >\n      {props.children}\n    </Dynamic>\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  untrack,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport { Dynamic } from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectChild,\n  HeadlessSelectChildProps,\n  HeadlessSelectOption,\n  HeadlessSelectOptionProps,\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  useHeadlessSelectChild,\n} from '../headless/Select';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport Fragment from '../utils/Fragment';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  Button,\n  ButtonProps,\n} from './Button';\nimport { queryListboxOptions } from '../utils/query-nodes';\n\ninterface ListboxContext {\n  horizontal?: boolean;\n  multiple?: boolean;\n  ownerID: string;\n  labelID: string;\n  buttonID: string;\n  optionsID: string;\n  hovering: boolean;\n  anchor?: HTMLElement | null;\n}\n\nconst ListboxContext = createContext<ListboxContext>();\n\nfunction useListboxContext(componentName: string): ListboxContext {\n  const context = useContext(ListboxContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Listbox>`);\n}\n\ninterface ListboxOptionsContext {\n  setChecked: (node: Element) => void;\n  setPrevChecked: (node: Element) => void;\n  setNextChecked: (node: Element) => void;\n  setFirstChecked: () => void;\n  setLastChecked: () => void;\n  setFirstMatch: (character: string) => void;\n}\n\nconst ListboxOptionsContext = createContext<ListboxOptionsContext>();\n\nfunction useListboxOptionsContext(componentName: string): ListboxOptionsContext {\n  const context = useContext(ListboxOptionsContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <ListboxOptions>`);\n}\n\ninterface ListboxMultipleProps<V> {\n  multiple: true;\n  onSelectChange?: (value: V[]) => void;\n}\n\ninterface ListboxSingleProps<V> {\n  multiple?: false;\n  onSelectChange?: (value?: V) => void;\n}\n\ntype ListboxBaseProps<V> =\n  | ListboxMultipleProps<V>\n  | ListboxSingleProps<V>;\n\nexport type ListboxProps<V, T extends ValidConstructor = typeof Fragment> = {\n  as?: T;\n  horizontal?: boolean;\n  onDisclosureChange?: (value: boolean) => void;\n} & ListboxBaseProps<V>\n  & Omit<HeadlessSelectRootProps<V>, 'multiple' | 'children' | 'onChange' | 'CONTROLLED'>\n  & Omit<HeadlessDisclosureRootProps, 'onChange' | 'CONTROLLED'>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps | keyof HeadlessSelectRootProps<V>>;\n\nexport function Listbox<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  return (\n    <ListboxContext.Provider\n      value={{\n        horizontal: props.horizontal,\n        multiple: props.multiple,\n        ownerID,\n        labelID,\n        buttonID,\n        optionsID,\n        get hovering() {\n          return hovering();\n        },\n        set hovering(value: boolean) {\n          setHovering(value);\n        },\n      }}\n    >\n      <Dynamic\n        component={props.as ?? Fragment}\n        {...omitProps(props, [\n          'as',\n          'children',\n          'defaultOpen',\n          'disabled',\n          'horizontal',\n          'isOpen',\n          'multiple',\n          'onDisclosureChange',\n          'onSelectChange',\n          'toggleable',\n          'value',\n          'defaultValue',\n        ])}\n        aria-labelledby={labelID}\n        data-sh-listbox={ownerID}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n      >\n        <HeadlessSelectRoot<V>\n          CONTROLLED={'value' in props}\n          multiple={props.multiple}\n          toggleable={props.toggleable}\n          defaultValue={props.defaultValue}\n          value={props.value}\n          disabled={props.disabled}\n          onChange={props.onSelectChange}\n        >\n          <HeadlessDisclosureRoot\n            CONTROLLED={'isOpen' in props}\n            isOpen={props.isOpen}\n            defaultOpen={props.defaultOpen}\n            disabled={props.disabled}\n            onChange={props.onDisclosureChange}\n          >\n            {props.children}\n          </HeadlessDisclosureRoot>\n        </HeadlessSelectRoot>\n      </Dynamic>\n    </ListboxContext.Provider>\n  );\n}\n\nexport type ListboxLabelProps<T extends ValidConstructor = 'label'> = {\n  as?: T;\n}\n  & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function ListboxLabel<T extends ValidConstructor = 'label'>(\n  props: ListboxLabelProps<T>,\n): JSX.Element {\n  const context = useListboxContext('ListboxLabel');\n\n  return (\n    <Dynamic\n      component={props.as ?? 'label'}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.labelID}\n      data-sh-listbox-label={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type ListboxButtonProps<T extends ValidConstructor = 'button'> = {\n  as?: T;\n}\n  & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function ListboxButton<T extends ValidConstructor = 'button'>(\n  props: ListboxButtonProps<T>,\n): JSX.Element {\n  const context = useListboxContext('ListboxButton');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.setState(!properties.isOpen());\n        }\n      };\n\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowUp':\n            case 'ArrowDown':\n              e.preventDefault();\n              toggle();\n              break;\n            default:\n              break;\n          }\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n      ref.addEventListener('keydown', onKeyDown);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n\n      const onMouseEnter = () => {\n        context.hovering = true;\n      };\n      const onMouseLeave = () => {\n        context.hovering = false;\n      };\n\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      onCleanup(() => {\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      {...omitProps(props, [\n        'children',\n        'ref',\n      ])}\n      id={context.buttonID}\n      aria-haspopup=\"listbox\"\n      aria-expanded={properties.isOpen()}\n      aria-controls={context.optionsID}\n      aria-disabled={properties.disabled() || props.disabled}\n      data-sh-expanded={properties.isOpen()}\n      data-sh-disabled={properties.disabled() || props.disabled}\n      disabled={properties.disabled() || props.disabled}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n        if (e instanceof HTMLElement) {\n          context.anchor = e;\n        }\n      })}\n      data-sh-listbox-button={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type ListboxOptionsProps<V, T extends ValidConstructor = 'ul'> = {\n  as?: T;\n}\n  & HeadlessSelectChildProps<V>\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessSelectChildProps<V>>;\n\nexport function ListboxOptions<V, T extends ValidConstructor = 'ul'>(\n  props: ListboxOptionsProps<V, T>,\n): JSX.Element {\n  const context = useListboxContext('ListboxOptions');\n  const selectProperties = useHeadlessSelectChild();\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  function setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  function setNextChecked(node: Element) {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const options = queryListboxOptions(ref, context.ownerID);\n      for (let i = 0, len = options.length; i < len; i += 1) {\n        if (node === options[i]) {\n          if (i === len - 1) {\n            setChecked(options[0]);\n          } else {\n            setChecked(options[i + 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setPrevChecked(node: Element) {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const options = queryListboxOptions(ref, context.ownerID);\n      for (let i = 0, len = options.length; i < len; i += 1) {\n        if (node === options[i]) {\n          if (i === 0) {\n            setChecked(options[len - 1]);\n          } else {\n            setChecked(options[i - 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setFirstChecked() {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const options = queryListboxOptions(ref, context.ownerID);\n      setChecked(options[0]);\n    }\n  }\n\n  function setLastChecked() {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const options = queryListboxOptions(ref, context.ownerID);\n      setChecked(options[options.length - 1]);\n    }\n  }\n\n  function setFirstMatch(character: string) {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const options = queryListboxOptions(ref, context.ownerID);\n      const lower = character.toLowerCase();\n      for (let i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].textContent?.toLowerCase().startsWith(lower)) {\n          setChecked(options[i]);\n          return;\n        }\n      }\n    }\n  }\n\n  createEffect(() => {\n    if (!selectProperties.hasSelected()) {\n      setFirstChecked();\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onBlur = (e: FocusEvent) => {\n        if (context.hovering) {\n          return;\n        }\n        if (!e.relatedTarget || !ref.contains(e.relatedTarget as Node)) {\n          properties.setState(false);\n        }\n      };\n      ref.addEventListener('focusout', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('focusout', onBlur);\n      });\n    }\n  });\n\n  return (\n    <ListboxOptionsContext.Provider\n      value={{\n        setChecked,\n        setFirstChecked,\n        setLastChecked,\n        setNextChecked,\n        setPrevChecked,\n        setFirstMatch,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'ul'}\n        {...omitProps(props, [\n          'as',\n          'children',\n          'ref',\n        ])}\n        id={context.optionsID}\n        role=\"listbox\"\n        disabled={properties.disabled() || props.disabled}\n        aria-disabled={properties.disabled() || props.disabled}\n        aria-multiselectable={context.multiple}\n        aria-labelledby={context.buttonID}\n        aria-orientation={context.horizontal ? 'horizontal' : 'vertical'}\n        data-sh-listbox-options={context.ownerID}\n        data-sh-disabled={properties.disabled() || props.disabled}\n        tabindex={0}\n        ref={createRef(props, (e) => {\n          setInternalRef(() => e);\n        })}\n      >\n        <HeadlessSelectChild>\n          {props.children}\n        </HeadlessSelectChild>\n      </Dynamic>\n    </ListboxOptionsContext.Provider>\n  );\n}\n\nexport type ListboxOptionProps<V, T extends ValidConstructor = 'li'> = {\n  as?: T;\n}\n  & HeadlessSelectOptionProps<V>\n  & WithRef<T>\n  & Omit<ButtonProps<T>, keyof HeadlessSelectOptionProps<V>>;\n\nexport function ListboxOption<V, T extends ValidConstructor = 'li'>(\n  props: ListboxOptionProps<V, T>,\n): JSX.Element {\n  const rootContext = useListboxContext('ListboxOptions');\n  const context = useListboxOptionsContext('ListboxOptions');\n  const disclosure = useHeadlessDisclosureChild();\n  const properties = useHeadlessSelectChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  let characters = '';\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n\n  onCleanup(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowLeft':\n              if (rootContext.horizontal) {\n                e.preventDefault();\n                context.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowUp':\n              if (!rootContext.horizontal) {\n                e.preventDefault();\n                context.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowRight':\n              if (rootContext.horizontal) {\n                e.preventDefault();\n                context.setNextChecked(ref);\n              }\n              break;\n            case 'ArrowDown':\n              if (!rootContext.horizontal) {\n                e.preventDefault();\n                context.setNextChecked(ref);\n              }\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              properties.select(props.value);\n              if (!rootContext.multiple) {\n                disclosure.setState(false);\n              }\n              break;\n            case 'Home':\n              e.preventDefault();\n              context.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              context.setLastChecked();\n              break;\n            default:\n              if (e.key.length === 1) {\n                characters = `${characters}${e.key}`;\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                timeout = setTimeout(() => {\n                  context.setFirstMatch(characters);\n                  characters = '';\n                }, 100);\n              }\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.select(props.value);\n          if (!rootContext.multiple) {\n            disclosure.setState(false);\n          }\n        }\n      };\n      const onFocus = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.focus(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (disclosure.isOpen()\n        && untrack(() => properties.isSelected(props.value))\n        && !(properties.disabled() || props.disabled)\n      ) {\n        ref.focus();\n      }\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      as={props.as ?? 'li'}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'value',\n        'ref',\n      ])}\n      disabled={props.disabled}\n      role=\"option\"\n      aria-disabled={props.disabled}\n      aria-selected={properties.isSelected(props.value)}\n      tabindex={-1}\n      data-sh-listbox-option={rootContext.ownerID}\n      data-sh-disabled={props.disabled}\n      data-sh-selected={properties.isSelected(props.value)}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessSelectOption\n        value={props.value}\n        disabled={props.disabled}\n      >\n        {props.children}\n      </HeadlessSelectOption>\n    </Dynamic>\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createUniqueId,\n  useContext,\n  Show,\n  onCleanup,\n  createSignal,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport getFocusableElements from '../utils/get-focusable-elements';\n\ninterface DialogContext {\n  ownerID: string;\n  panelID: string;\n  titleID: string;\n  descriptionID: string;\n}\n\nconst DialogContext = createContext<DialogContext>();\n\nfunction useDialogContext(componentName: string): DialogContext {\n  const context = useContext(DialogContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Dialog>`);\n}\n\nexport type DialogProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n} & HeadlessDisclosureRootProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps | 'unmount'>;\n\nexport function Dialog<T extends ValidConstructor = 'div'>(\n  props: DialogProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  let returnElement: HTMLElement | null = null;\n  if (typeof document !== 'undefined') {\n    returnElement = document.activeElement as HTMLElement | null;\n  }\n\n  onCleanup(() => {\n    returnElement?.focus();\n  });\n\n  return (\n    <DialogContext.Provider\n      value={{\n        ownerID,\n        panelID,\n        titleID,\n        descriptionID,\n      }}\n    >\n      <HeadlessDisclosureRoot\n        CONTROLLED={'isOpen' in props}\n        isOpen={props.isOpen}\n        onChange={(value) => {\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            returnElement?.focus();\n          } else {\n            returnElement = document.activeElement as HTMLElement | null;\n            props.onOpen?.();\n          }\n        }}\n        defaultOpen={props.defaultOpen}\n        disabled={props.disabled}\n      >\n        {({ isOpen }) => (\n          <Show\n            when={props.unmount ?? true}\n            fallback={(\n              <Dynamic\n                component={props.as ?? 'div'}\n                {...omitProps(props, [\n                  'as',\n                  'children',\n                  'defaultOpen',\n                  'unmount',\n                  'isOpen',\n                  'disabled',\n                  'onClose',\n                  'onChange',\n                ])}\n                id={ownerID}\n                role=\"dialog\"\n                aria-modal\n                aria-labelledby={titleID}\n                aria-describedby={descriptionID}\n                data-sh-dialog={ownerID}\n              >\n                <HeadlessDisclosureChild>\n                  {props.children}\n                </HeadlessDisclosureChild>\n              </Dynamic>\n            )}\n          >\n            <Show when={isOpen()}>\n              <Dynamic\n                component={props.as ?? 'div'}\n                {...omitProps(props, [\n                  'as',\n                  'children',\n                  'defaultOpen',\n                  'unmount',\n                  'isOpen',\n                  'disabled',\n                  'onClose',\n                  'onChange',\n                ])}\n                id={ownerID}\n                role=\"dialog\"\n                aria-modal\n                aria-labelledby={titleID}\n                aria-describedby={descriptionID}\n                data-sh-dialog={ownerID}\n              >\n                <HeadlessDisclosureChild>\n                  {props.children}\n                </HeadlessDisclosureChild>\n              </Dynamic>\n            </Show>\n          </Show>\n        )}\n      </HeadlessDisclosureRoot>\n    </DialogContext.Provider>\n  );\n}\n\nexport type DialogTitleProps<T extends ValidConstructor = 'h2'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function DialogTitle<T extends ValidConstructor = 'h2'>(\n  props: DialogTitleProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogTitle');\n  return (\n    <Dynamic\n      component={(props.as ?? 'h2') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.titleID}\n      data-sh-dialog-title={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type DialogPanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function DialogPanel<T extends ValidConstructor = 'div'>(\n  props: DialogPanelProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogPanel');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        const initialNodes = getFocusableElements(ref);\n        if (initialNodes.length) {\n          initialNodes[0].focus();\n        }\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              const nodes = getFocusableElements(ref);\n              if (e.shiftKey) {\n                if (!document.activeElement || !ref.contains(document.activeElement)) {\n                  nodes[nodes.length - 1].focus();\n                } else {\n                  for (let i = 0, len = nodes.length; i < len; i += 1) {\n                    if (document.activeElement === nodes[i]) {\n                      if (i === 0) {\n                        nodes[len - 1].focus();\n                      } else {\n                        nodes[i - 1].focus();\n                      }\n                      break;\n                    }\n                  }\n                }\n              } else if (!document.activeElement || !ref.contains(document.activeElement)) {\n                nodes[0].focus();\n              } else {\n                for (let i = 0, len = nodes.length; i < len; i += 1) {\n                  if (document.activeElement === nodes[i]) {\n                    if (i === len - 1) {\n                      nodes[0].focus();\n                    } else {\n                      nodes[i + 1].focus();\n                    }\n                    break;\n                  }\n                }\n              }\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      id={context.panelID}\n      data-sh-dialog-panel={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type DialogOverlayProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function DialogOverlay<T extends ValidConstructor = 'p'>(\n  props: DialogOverlayProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogOverlay');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      data-sh-dialog-overlay={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type DialogDescriptionProps<T extends ValidConstructor = 'p'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function DialogDescription<T extends ValidConstructor = 'p'>(\n  props: DialogDescriptionProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogDescription');\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'p') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.descriptionID}\n      data-sh-dialog-description={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n", "export default function getFocusableElements(\n  node: HTMLElement,\n  filter?: HTMLElement,\n): HTMLElement[] {\n  const nodes = node.querySelectorAll(\n    'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n  );\n  const replicated: Element[] = [];\n\n  for (let i = 0, len = nodes.length; i < len; i += 1) {\n    if (!filter || !filter.contains(nodes[i])) {\n      replicated.push(nodes[i]);\n    }\n  }\n\n  return replicated as HTMLElement[];\n}\n", "import {\n  createEffect,\n  createSignal,\n  createUniqueId,\n  JSX,\n  onCleanup,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport getFocusableElements from '../utils/get-focusable-elements';\n\nexport type ToolbarProps<T extends ValidConstructor = 'div'> = {\n  as?: T,\n  horizontal?: boolean;\n} & Omit<DynamicProps<T>, 'as'> & WithRef<T>;\n\nexport function Toolbar<T extends ValidConstructor = 'div'>(\n  props: ToolbarProps<T>,\n): JSX.Element {\n  const toolbarID = createUniqueId();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n  let focusedElement: HTMLElement | undefined;\n\n  function getNextFocusable(): void {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const nodes = getFocusableElements(ref);\n      if (document.activeElement\n        && ref.contains(document.activeElement)\n      ) {\n        for (let i = 0, len = nodes.length; i < len; i += 1) {\n          if (document.activeElement === nodes[i]) {\n            if (i === len - 1) {\n              nodes[0].focus();\n            } else {\n              nodes[i + 1].focus();\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  function getPrevFocusable(): void {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const nodes = getFocusableElements(ref);\n      if (document.activeElement\n        && ref.contains(document.activeElement)\n      ) {\n        for (let i = 0, len = nodes.length; i < len; i += 1) {\n          if (document.activeElement === nodes[i]) {\n            if (i === 0) {\n              nodes[len - 1].focus();\n            } else {\n              nodes[i - 1].focus();\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        switch (e.key) {\n          case 'ArrowLeft':\n            if (props.horizontal) {\n              e.preventDefault();\n              getPrevFocusable();\n            }\n            break;\n          case 'ArrowUp':\n            if (!props.horizontal) {\n              e.preventDefault();\n              getPrevFocusable();\n            }\n            break;\n          case 'ArrowRight':\n            if (props.horizontal) {\n              e.preventDefault();\n              getNextFocusable();\n            }\n            break;\n          case 'ArrowDown':\n            if (!props.horizontal) {\n              e.preventDefault();\n              getNextFocusable();\n            }\n            break;\n          case 'Home': {\n            const nodes = getFocusableElements(ref);\n            if (nodes.length) {\n              e.preventDefault();\n              nodes[0].focus();\n            }\n          }\n            break;\n          case 'End': {\n            const nodes = getFocusableElements(ref);\n            if (nodes.length) {\n              e.preventDefault();\n              nodes[nodes.length - 1].focus();\n            }\n          }\n            break;\n          default:\n            break;\n        }\n      };\n\n      const onFocus = () => {\n        if (focusedElement) {\n          focusedElement.focus();\n        } else {\n          const nodes = getFocusableElements(ref);\n          if (nodes.length) {\n            nodes[0].focus();\n          }\n        }\n      };\n\n      const onFocusIn = (e: FocusEvent) => {\n        if (e.target && e.target !== ref) {\n          focusedElement = e.target as HTMLElement;\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('focusin', onFocusIn);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('focusin', onFocusIn);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      {...omitProps(props, [\n        'as',\n        'horizontal',\n        'ref',\n      ])}\n      role=\"toolbar\"\n      id={toolbarID}\n      aria-orientation={(props.horizontal ?? true) ? 'horizontal' : 'vertical'}\n      tabindex={0}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n      data-sh-toolbar={toolbarID}\n    />\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport { Dynamic } from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectOption,\n  HeadlessSelectOptionProps,\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  useHeadlessSelectChild,\n} from '../headless/Select';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport {\n  querySelectOptions,\n} from '../utils/query-nodes';\nimport {\n  Button,\n  ButtonProps,\n} from './Button';\n\ninterface SelectContext {\n  ownerID: string;\n  horizontal: boolean;\n  setChecked: (node: Element) => void;\n  setPrevChecked: (node: Element) => void;\n  setNextChecked: (node: Element) => void;\n  setFirstChecked: () => void;\n  setLastChecked: () => void;\n  setFirstMatch: (character: string) => void;\n}\n\nconst SelectContext = createContext<SelectContext>();\n\nfunction useSelectContext(componentName: string): SelectContext {\n  const context = useContext(SelectContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Select>`);\n}\n\nexport type SelectProps<V, T extends ValidConstructor = 'ul'> = {\n  as?: T;\n  horizontal?: boolean;\n}\n  & Omit<HeadlessSelectRootProps<V>, 'CONTROLLED'>\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessSelectRootProps<V>>;\n\nexport function Select<V, T extends ValidConstructor = 'ul'>(\n  props: SelectProps<V, T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n\n  let internalRef: DynamicNode<T>;\n\n  function setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  function setNextChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const options = querySelectOptions(internalRef, ownerID);\n      for (let i = 0, len = options.length; i < len; i += 1) {\n        if (node === options[i]) {\n          if (i === len - 1) {\n            setChecked(options[0]);\n          } else {\n            setChecked(options[i + 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setPrevChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const options = querySelectOptions(internalRef, ownerID);\n      for (let i = 0, len = options.length; i < len; i += 1) {\n        if (node === options[i]) {\n          if (i === 0) {\n            setChecked(options[len - 1]);\n          } else {\n            setChecked(options[i - 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setFirstChecked() {\n    if (internalRef instanceof HTMLElement) {\n      const options = querySelectOptions(internalRef, ownerID);\n      setChecked(options[0]);\n    }\n  }\n\n  function setLastChecked() {\n    if (internalRef instanceof HTMLElement) {\n      const options = querySelectOptions(internalRef, ownerID);\n      setChecked(options[options.length - 1]);\n    }\n  }\n\n  function setFirstMatch(character: string) {\n    if (internalRef instanceof HTMLElement) {\n      const lower = character.toLowerCase();\n      const options = querySelectOptions(internalRef, ownerID);\n      for (let i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].textContent?.toLowerCase().startsWith(lower)) {\n          setChecked(options[i]);\n          return;\n        }\n      }\n    }\n  }\n\n  return (\n    <SelectContext.Provider\n      value={{\n        horizontal: !!props.horizontal,\n        ownerID,\n        setChecked,\n        setFirstChecked,\n        setLastChecked,\n        setNextChecked,\n        setPrevChecked,\n        setFirstMatch,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'ul'}\n        {...omitProps(props, [\n          'as',\n          'children',\n          'toggleable',\n          'value',\n          'onChange',\n          'multiple',\n          'horizontal',\n          'disabled',\n          'ref',\n          'defaultValue',\n        ])}\n        id={ownerID}\n        role=\"listbox\"\n        disabled={props.disabled}\n        aria-multiselectable={props.multiple}\n        aria-orientation={props.horizontal ? 'horizontal' : 'vertical'}\n        aria-disabled={props.disabled}\n        data-sh-select={ownerID}\n        data-sh-disabled={props.disabled}\n        ref={createRef(props, (e) => {\n          internalRef = e;\n        })}\n      >\n        <HeadlessSelectRoot\n          CONTROLLED={'value' in props}\n          multiple={props.multiple}\n          toggleable={props.toggleable}\n          defaultValue={props.defaultValue}\n          value={props.value}\n          onChange={props.onChange}\n          disabled={props.disabled}\n        >\n          {props.children}\n        </HeadlessSelectRoot>\n      </Dynamic>\n    </SelectContext.Provider>\n  );\n}\n\nexport type SelectOptionProps<V, T extends ValidConstructor = 'li'> = {\n  as?: T;\n}\n  & HeadlessSelectOptionProps<V>\n  & WithRef<T>\n  & Omit<ButtonProps<T>, keyof HeadlessSelectOptionProps<V>>;\n\nexport function SelectOption<V, T extends ValidConstructor = 'li'>(\n  props: SelectOptionProps<V, T>,\n): JSX.Element {\n  const context = useSelectContext('Select');\n  const properties = useHeadlessSelectChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  let characters = '';\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n\n  onCleanup(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowUp':\n              if (!context.horizontal) {\n                e.preventDefault();\n                context.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowLeft':\n              if (context.horizontal) {\n                e.preventDefault();\n                context.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowDown':\n              if (!context.horizontal) {\n              e.preventDefault();\n                context.setNextChecked(ref);\n              }\n              break;\n            case 'ArrowRight':\n              if (context.horizontal) {\n                e.preventDefault();\n                context.setNextChecked(ref);\n              }\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              properties.select(props.value);\n              break;\n            case 'Home':\n              e.preventDefault();\n              context.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              context.setLastChecked();\n              break;\n            default:\n              if (e.key.length === 1) {\n                characters = `${characters}${e.key}`;\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                timeout = setTimeout(() => {\n                  context.setFirstMatch(characters);\n                  characters = '';\n                }, 100);\n              }\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.select(props.value);\n        }\n      };\n      const onFocus = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.focus(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.blur();\n        }\n      };\n      const onMouseEnter = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          ref.focus();\n        }\n      };\n      const onMouseLeave = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          ref.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      as={props.as ?? 'li'}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'value',\n        'ref',\n      ])}\n      disabled={props.disabled}\n      role=\"option\"\n      tabindex={-1}\n      aria-selected={properties.isSelected(props.value)}\n      aria-disabled={props.disabled}\n      data-sh-select-option={context.ownerID}\n      data-sh-selected={properties.isSelected(props.value)}\n      data-sh-disabled={props.disabled}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessSelectOption\n        value={props.value}\n        disabled={props.disabled}\n      >\n        {props.children}\n      </HeadlessSelectOption>\n    </Dynamic>\n  );\n}\n", "import {\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  untrack,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  DynamicNode,\n  ValidConstructor,\n  WithRef,\n  createRef,\n} from '../utils/dynamic-prop';\nimport {\n  Button,\n  ButtonProps,\n} from './Button';\n\nexport type ToggleProps<T extends ValidConstructor = 'button'> = {\n  defaultPressed?: boolean;\n  pressed?: boolean;\n  onChange?: (value: boolean) => void;\n} & Omit<ButtonProps<T>, 'defaultPressed' | 'pressed' | 'onChange'>\n  & WithRef<T>;\n\nexport function Toggle<T extends ValidConstructor = 'button'>(\n  props: ToggleProps<T>,\n): JSX.Element {\n  const [state, setState] = createSignal(untrack(() => !!props.defaultPressed));\n  const toggleID = createUniqueId();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        setState(!state());\n\n        props.onChange?.(state());\n      };\n\n      ref.addEventListener('click', onClick);\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      as={props.as}\n      {...omitProps(props, [\n        'defaultPressed',\n        'onChange',\n        'pressed',\n        'ref',\n      ])}\n      data-sh-toggle={toggleID}\n      aria-pressed={state()}\n      data-sh-pressed={state()}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    />\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  Show,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport {\n  Button,\n  ButtonProps,\n} from './Button';\nimport getFocusableElements from '../utils/get-focusable-elements';\n\ninterface PopoverContext {\n  ownerID: string;\n  buttonID: string;\n  panelID: string;\n  hovering: boolean;\n  anchor?: HTMLElement | null;\n}\n\nconst PopoverContext = createContext<PopoverContext>();\n\nfunction usePopoverContext(componentName: string): PopoverContext {\n  const context = useContext(PopoverContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Popover>`);\n}\n\nexport type PopoverProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  onClose?: () => void;\n  onOpen?: () => void;\n} & Omit<HeadlessDisclosureRootProps, 'CONTROLLED'>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps>;\n\nexport function Popover<T extends ValidConstructor = 'div'>(\n  props: PopoverProps<T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  let returnElement: HTMLElement | null = null;\n  if (typeof document !== 'undefined') {\n    returnElement = document.activeElement as HTMLElement | null;\n  }\n\n  onCleanup(() => {\n    returnElement?.focus();\n  });\n\n  return (\n    <PopoverContext.Provider\n      value={{\n        ownerID,\n        buttonID,\n        panelID,\n        get hovering() {\n          return hovering();\n        },\n        set hovering(value: boolean) {\n          setHovering(value);\n        },\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'isOpen',\n          'as',\n          'children',\n          'disabled',\n          'defaultOpen',\n          'onChange',\n        ])}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n        data-sh-popover={ownerID}\n      >\n        <HeadlessDisclosureRoot\n          CONTROLLED={'isOpen' in props}\n          isOpen={props.isOpen}\n          onChange={(value) => {\n            props.onChange?.(value);\n            if (!value) {\n              returnElement?.focus();\n              props.onClose?.();\n            } else {\n              returnElement = document.activeElement as HTMLElement | null;\n              props.onOpen?.();\n            }\n          }}\n          disabled={props.disabled}\n          defaultOpen={props.defaultOpen}\n        >\n          {props.children}\n        </HeadlessDisclosureRoot>\n      </Dynamic>\n    </PopoverContext.Provider>\n  );\n}\n\nexport type PopoverButtonProps<T extends ValidConstructor = 'button'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<ButtonProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function PopoverButton<T extends ValidConstructor = 'button'>(\n  props: PopoverButtonProps<T>,\n): JSX.Element {\n  const context = usePopoverContext('PopoverButton');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.setState(!properties.isOpen());\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n      });\n\n      const onMouseEnter = () => {\n        context.hovering = true;\n      };\n      const onMouseLeave = () => {\n        context.hovering = false;\n      };\n\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      onCleanup(() => {\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={Button}\n      {...omitProps(props, [\n        'children',\n        'ref',\n      ])}\n      id={context.buttonID}\n      aria-disabled={properties.disabled() || props.disabled}\n      aria-expanded={properties.isOpen()}\n      aria-controls={properties.isOpen() && context.panelID}\n      data-sh-disabled={properties.disabled() || props.disabled}\n      data-sh-expanded={properties.isOpen()}\n      disabled={properties.disabled() || props.disabled}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n        if (e instanceof HTMLElement) {\n          context.anchor = e;\n        }\n      })}\n      data-sh-popover-button={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type PopoverPanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function PopoverPanel<T extends ValidConstructor = 'div'>(\n  props: PopoverPanelProps<T>,\n): JSX.Element {\n  const context = usePopoverContext('PopoverPanel');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        const initialNodes = getFocusableElements(ref);\n        if (initialNodes.length) {\n          initialNodes[0].focus();\n        }\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              const nodes = getFocusableElements(ref);\n              if (e.shiftKey) {\n                if (!document.activeElement || !ref.contains(document.activeElement)) {\n                  nodes[nodes.length - 1].focus();\n                } else {\n                  for (let i = 0, len = nodes.length; i < len; i += 1) {\n                    if (document.activeElement === nodes[i]) {\n                      if (i === 0) {\n                        nodes[len - 1].focus();\n                      } else {\n                        nodes[i - 1].focus();\n                      }\n                      break;\n                    }\n                  }\n                }\n              } else if (!document.activeElement || !ref.contains(document.activeElement)) {\n                nodes[0].focus();\n              } else {\n                for (let i = 0, len = nodes.length; i < len; i += 1) {\n                  if (document.activeElement === nodes[i]) {\n                    if (i === len - 1) {\n                      nodes[0].focus();\n                    } else {\n                      nodes[i + 1].focus();\n                    }\n                    break;\n                  }\n                }\n              }\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        const onBlur = (e: FocusEvent) => {\n          if (context.hovering) {\n            return;\n          }\n          if (!e.relatedTarget || !ref.contains(e.relatedTarget as Node)) {\n            properties.setState(false);\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        ref.addEventListener('focusout', onBlur);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n          ref.removeEventListener('focusout', onBlur);\n        });\n      }\n    }\n  });\n\n  return (\n    <Show\n      when={props.unmount ?? true}\n      fallback={(\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'unmount',\n            'children',\n            'ref',\n          ])}\n          id={context.panelID}\n          data-sh-popover-panel={context.ownerID}\n          ref={createRef(props, (e) => {\n            setInternalRef(() => e);\n          })}\n        >\n          <HeadlessDisclosureChild>\n            {props.children}\n          </HeadlessDisclosureChild>\n        </Dynamic>\n      )}\n    >\n      <Show when={properties.isOpen()}>\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'unmount',\n            'children',\n            'ref',\n          ])}\n          id={context.panelID}\n          data-sh-popover-panel={context.ownerID}\n          ref={createRef(props, (e) => {\n            setInternalRef(() => e);\n          })}\n        >\n          <HeadlessDisclosureChild>\n            {props.children}\n          </HeadlessDisclosureChild>\n        </Dynamic>\n      </Show>\n    </Show>\n  );\n}\n\nexport type PopoverOverlayProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function PopoverOverlay<T extends ValidConstructor = 'p'>(\n  props: PopoverOverlayProps<T>,\n): JSX.Element {\n  const context = usePopoverContext('PopoverOverlay');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      data-sh-popover-overlay={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n", "import {\n  createUniqueId,\n} from 'solid-js';\nimport {\n  JSX,\n} from 'solid-js/jsx-runtime';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  DynamicProps,\n  ValidConstructor,\n} from '../utils/dynamic-prop';\n\nexport type AlertProps<T extends ValidConstructor = 'div'> = {\n  as?: T,\n} & Omit<DynamicProps<T>, 'as'>\n\nexport function Alert<T extends ValidConstructor = 'div'>(\n  props: AlertProps<T>,\n): JSX.Element {\n  const alertID = createUniqueId();\n\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      id={alertID}\n      {...omitProps(props, [\n        'as',\n      ])}\n      role=\"alert\"\n      data-sh-alert={alertID}\n    />\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createUniqueId,\n  useContext,\n  Show,\n  onCleanup,\n  createSignal,\n} from 'solid-js';\nimport {\n  JSX,\n} from 'solid-js/jsx-runtime';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport getFocusableElements from '../utils/get-focusable-elements';\n\ninterface AlertDialogContext {\n  ownerID: string;\n  panelID: string;\n  titleID: string;\n  descriptionID: string;\n}\n\nconst AlertDialogContext = createContext<AlertDialogContext>();\n\nfunction useAlertDialogContext(componentName: string): AlertDialogContext {\n  const context = useContext(AlertDialogContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <AlertDialog>`);\n}\n\nexport type AlertDialogProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n} & Omit<HeadlessDisclosureRootProps, 'CONTROLLED'>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps | 'unmount'>;\n\nexport function AlertDialog<T extends ValidConstructor = 'div'>(\n  props: AlertDialogProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  let returnElement: HTMLElement | null = null;\n  if (typeof document !== 'undefined') {\n    returnElement = document.activeElement as HTMLElement | null;\n  }\n\n  onCleanup(() => {\n    returnElement?.focus();\n  });\n\n  return (\n    <AlertDialogContext.Provider\n      value={{\n        ownerID,\n        panelID,\n        titleID,\n        descriptionID,\n      }}\n    >\n      <HeadlessDisclosureRoot\n        CONTROLLED={'isOpen' in props}\n        isOpen={props.isOpen}\n        onChange={(value) => {\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            returnElement?.focus();\n          } else {\n            returnElement = document.activeElement as HTMLElement | null;\n            props.onOpen?.();\n          }\n        }}\n        defaultOpen={props.defaultOpen}\n        disabled={props.disabled}\n      >\n        {({ isOpen }) => (\n          <Show\n            when={props.unmount ?? true}\n            fallback={(\n              <Dynamic\n                component={props.as ?? 'div'}\n                {...omitProps(props, [\n                  'as',\n                  'children',\n                  'defaultOpen',\n                  'unmount',\n                  'isOpen',\n                  'disabled',\n                  'onClose',\n                  'onChange',\n                ])}\n                id={ownerID}\n                role=\"alertdialog\"\n                aria-modal\n                aria-labelledby={titleID}\n                aria-describedby={descriptionID}\n                data-sh-alert-dialog={ownerID}\n              >\n                <HeadlessDisclosureChild>\n                  {props.children}\n                </HeadlessDisclosureChild>\n              </Dynamic>\n            )}\n          >\n            <Show when={isOpen()}>\n              <Dynamic\n                component={props.as ?? 'div'}\n                {...omitProps(props, [\n                  'as',\n                  'children',\n                  'defaultOpen',\n                  'unmount',\n                  'isOpen',\n                  'disabled',\n                  'onClose',\n                  'onChange',\n                ])}\n                id={ownerID}\n                role=\"alertdialog\"\n                aria-modal\n                aria-labelledby={titleID}\n                aria-describedby={descriptionID}\n                data-sh-alert-dialog={ownerID}\n              >\n                <HeadlessDisclosureChild>\n                  {props.children}\n                </HeadlessDisclosureChild>\n              </Dynamic>\n            </Show>\n          </Show>\n        )}\n      </HeadlessDisclosureRoot>\n    </AlertDialogContext.Provider>\n  );\n}\n\nexport type AlertDialogTitleProps<T extends ValidConstructor = 'h2'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function AlertDialogTitle<T extends ValidConstructor = 'h2'>(\n  props: AlertDialogTitleProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogTitle');\n  return (\n    <Dynamic\n      component={(props.as ?? 'h2') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.titleID}\n      data-sh-alert-dialog-title={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type AlertDialogPanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function AlertDialogPanel<T extends ValidConstructor = 'div'>(\n  props: AlertDialogPanelProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogPanel');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        const initialNodes = getFocusableElements(ref);\n        if (initialNodes.length) {\n          initialNodes[0].focus();\n        }\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              const nodes = getFocusableElements(ref);\n              if (e.shiftKey) {\n                if (!document.activeElement || !ref.contains(document.activeElement)) {\n                  nodes[nodes.length - 1].focus();\n                } else {\n                  for (let i = 0, len = nodes.length; i < len; i += 1) {\n                    if (document.activeElement === nodes[i]) {\n                      if (i === 0) {\n                        nodes[len - 1].focus();\n                      } else {\n                        nodes[i - 1].focus();\n                      }\n                      break;\n                    }\n                  }\n                }\n              } else if (!document.activeElement || !ref.contains(document.activeElement)) {\n                nodes[0].focus();\n              } else {\n                for (let i = 0, len = nodes.length; i < len; i += 1) {\n                  if (document.activeElement === nodes[i]) {\n                    if (i === len - 1) {\n                      nodes[0].focus();\n                    } else {\n                      nodes[i + 1].focus();\n                    }\n                    break;\n                  }\n                }\n              }\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      id={context.panelID}\n      data-sh-alert-dialog-panel={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type AlertDialogOverlayProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function AlertDialogOverlay<T extends ValidConstructor = 'div'>(\n  props: AlertDialogOverlayProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogOverlay');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      data-sh-alert-dialog-overlay={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type AlertDialogDescriptionProps<T extends ValidConstructor = 'p'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function AlertDialogDescription<T extends ValidConstructor = 'p'>(\n  props: AlertDialogDescriptionProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogDescription');\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'p') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.descriptionID}\n      data-sh-alert-dialog-description={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n", "import {\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  DynamicProps,\n  ValidConstructor,\n} from '../utils/dynamic-prop';\n\nexport type ToastProps<T extends ValidConstructor = 'div'> = {\n  as?: T,\n  disabled?: boolean;\n} & Omit<DynamicProps<T>, 'as'>\n\nexport function Toast<T extends ValidConstructor = 'div'>(\n  props: ToastProps<T>,\n): JSX.Element {\n  const toastID = createUniqueId();\n\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      id={toastID}\n      {...omitProps(props, [\n        'as',\n      ])}\n      role=\"status\"\n      aria-live=\"polite\"\n      data-sh-toast={toastID}\n    />\n  );\n}\n\nexport type ToasterProps<T extends ValidConstructor = 'div'> = {\n  as?: T,\n  disabled?: boolean;\n} & Omit<DynamicProps<T>, 'as'>\n\nexport function Toaster<T extends ValidConstructor = 'div'>(\n  props: ToasterProps<T>,\n): JSX.Element {\n  const toasterID = createUniqueId();\n\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      id={toasterID}\n      {...omitProps(props, [\n        'as',\n      ])}\n      data-sh-toast={toasterID}\n    />\n  );\n}\n\nexport interface ToastData<T> {\n  id: string;\n  data: T;\n}\n\nexport type ToasterListener<T> = (queue: ToastData<T>[]) => void;\n\nexport class ToasterStore<T> {\n  private static toasterID = 0;\n\n  private id: number;\n\n  private queue: ToastData<T>[] = [];\n\n  private listeners = new Set<ToasterListener<T>>();\n\n  private toastID = 0;\n\n  constructor() {\n    this.id = ToasterStore.toasterID;\n    ToasterStore.toasterID += 1;\n  }\n\n  subscribe(callback: ToasterListener<T>): () => void {\n    this.listeners.add(callback);\n    return () => {\n      this.listeners.delete(callback);\n    };\n  }\n\n  private notify(): void {\n    const clone = [...this.queue];\n    for (const listener of this.listeners.keys()) {\n      listener(clone);\n    }\n  }\n\n  create(data: T): string {\n    const id = `toast-${this.id}-[${this.toastID}`;\n    this.toastID += 1;\n    this.queue.push({\n      id,\n      data,\n    });\n    this.notify();\n    return id;\n  }\n\n  remove(id: string): void {\n    this.queue = this.queue.filter((item) => item.id !== id);\n    this.notify();\n  }\n\n  clear(): void {\n    this.queue = [];\n    this.notify();\n  }\n\n  getQueue(): ToastData<T>[] {\n    return this.queue;\n  }\n}\n\nexport function useToaster<T>(toaster: ToasterStore<T>): () => ToastData<T>[] {\n  const [signal, setSignal] = createSignal(toaster.getQueue());\n\n  createEffect(() => {\n    onCleanup(toaster.subscribe(setSignal));\n  });\n\n  return signal;\n}\n", "import { JSX } from 'solid-js/jsx-runtime';\nimport {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  useContext,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessToggleChild,\n  HeadlessToggleChildProps,\n  HeadlessToggleRoot,\n  HeadlessToggleRootProps,\n  useHeadlessToggleChild,\n} from '../headless/Toggle';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport Fragment from '../utils/Fragment';\n\ninterface CheckboxContext {\n  ownerID: string;\n  labelID: string;\n  indicatorID: string;\n  descriptionID: string;\n}\n\nconst CheckboxContext = createContext<CheckboxContext>();\n\nfunction useCheckboxContext(componentName: string): CheckboxContext {\n  const context = useContext(CheckboxContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Checkbox>`);\n}\n\nexport type CheckboxProps<T extends ValidConstructor = typeof Fragment> = {\n  as?: T;\n} & Omit<HeadlessToggleRootProps, 'CONTROLLED'>\n  & Omit<DynamicProps<T>, keyof HeadlessToggleRootProps>;\n\nexport function Checkbox<T extends ValidConstructor = typeof Fragment>(\n  props: CheckboxProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const indicatorID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  return (\n    <CheckboxContext.Provider\n      value={{\n        ownerID,\n        labelID,\n        indicatorID,\n        descriptionID,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? Fragment}\n        {...omitProps(props, [\n          'checked',\n          'as',\n          'children',\n          'disabled',\n          'defaultChecked',\n          'onChange',\n        ])}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n        data-sh-checkbox={ownerID}\n      >\n        <HeadlessToggleRoot\n          CONTROLLED={'checked' in props}\n          checked={props.checked}\n          onChange={props.onChange}\n          disabled={props.disabled}\n          defaultChecked={props.defaultChecked}\n        >\n          {props.children}\n        </HeadlessToggleRoot>\n      </Dynamic>\n    </CheckboxContext.Provider>\n  );\n}\n\nexport type CheckboxIndicatorProps<T extends ValidConstructor = 'button'> = {\n  as?: T;\n} & HeadlessToggleChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessToggleChildProps>;\n\nexport function CheckboxIndicator<T extends ValidConstructor = 'button'>(\n  props: CheckboxIndicatorProps<T>,\n): JSX.Element {\n  const context = useCheckboxContext('CheckboxIndicator');\n  const state = useHeadlessToggleChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        state.setState(!state.checked());\n      };\n\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (e.key === ' ') {\n          toggle();\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={props.as ?? 'button'}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      id={context.indicatorID}\n      role=\"checkbox\"\n      data-sh-checkbox-indicator={context.ownerID}\n      aria-labelledby={context.labelID}\n      aria-describedby={context.descriptionID}\n      aria-disabled={state.disabled()}\n      aria-checked={state.checked() == null ? 'mixed' : state.checked()}\n      data-sh-disabled={state.disabled()}\n      data-sh-checked={state.checked()}\n      disabled={state.disabled()}\n      tabindex={0}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessToggleChild>\n        {props.children}\n      </HeadlessToggleChild>\n    </Dynamic>\n  );\n}\n\nexport type CheckboxLabelProps<T extends ValidConstructor = 'label'> = {\n  as?: T;\n} & HeadlessToggleChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessToggleChildProps>;\n\nexport function CheckboxLabel<T extends ValidConstructor = 'label'>(\n  props: CheckboxLabelProps<T>,\n): JSX.Element {\n  const context = useCheckboxContext('CheckboxLabel');\n  return (\n    <Dynamic\n      component={props.as ?? 'label'}\n      {...omitProps(props, [\n        'as',\n      ])}\n      id={context.labelID}\n      for={context.indicatorID}\n      data-sh-checkbox-label={context.ownerID}\n    >\n      {props.children}\n    </Dynamic>\n  );\n}\n\nexport type CheckboxDescriptionProps<T extends ValidConstructor = 'p'> = {\n  as?: T;\n} & HeadlessToggleChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessToggleChildProps>;\n\nexport function CheckboxDescription<T extends ValidConstructor = 'p'>(\n  props: CheckboxDescriptionProps<T>,\n): JSX.Element {\n  const context = useCheckboxContext('CheckboxDescription');\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'p') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.descriptionID}\n      data-sh-checkbox-description={context.ownerID}\n    >\n      <HeadlessToggleChild>\n        {props.children}\n      </HeadlessToggleChild>\n    </Dynamic>\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  useContext,\n} from 'solid-js';\nimport {\n  JSX,\n} from 'solid-js/jsx-runtime';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport { queryMenuItems } from '../utils/query-nodes';\n\ninterface MenuContext {\n  ownerID: string;\n  setChecked: (node: Element) => void;\n  setPrevChecked: (node: Element) => void;\n  setNextChecked: (node: Element) => void;\n  setFirstChecked: () => void;\n  setLastChecked: () => void;\n  setFirstMatch: (character: string) => void;\n}\n\nconst MenuContext = createContext<MenuContext>();\n\nfunction useMenuContext(componentName: string): MenuContext {\n  const context = useContext(MenuContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Menu>`);\n}\n\ninterface MenuProperties {\n  disabled: () => boolean;\n}\n\ntype MenuChildRenderProp = (\n  (properties: MenuProperties) => JSX.Element\n);\n\nfunction isMenuChildRenderProp(\n  children: MenuChildRenderProp | JSX.Element,\n): children is MenuChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\ninterface MenuChildProps {\n  disabled?: boolean;\n  children?: MenuChildRenderProp | JSX.Element;\n}\n\nfunction MenuChild(props: MenuChildProps): JSX.Element {\n  const body = props.children;\n  if (isMenuChildRenderProp(body)) {\n    return body({\n      disabled: () => !!props.disabled,\n    });\n  }\n  return body;\n}\n\nexport type MenuProps<T extends ValidConstructor = 'ul'> = {\n  as?: T;\n} & WithRef<T>\n  & Omit<DynamicProps<T>, 'as'>;\n\nexport function Menu<T extends ValidConstructor = 'ul'>(\n  props: MenuProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n\n  let internalRef: DynamicNode<T>;\n\n  function setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  function setNextChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const items = queryMenuItems(internalRef, ownerID);\n      for (let i = 0, len = items.length; i < len; i += 1) {\n        if (node === items[i]) {\n          if (i === len - 1) {\n            setChecked(items[0]);\n          } else {\n            setChecked(items[i + 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setPrevChecked(node: Element) {\n    if (internalRef instanceof HTMLElement) {\n      const items = queryMenuItems(internalRef, ownerID);\n      for (let i = 0, len = items.length; i < len; i += 1) {\n        if (node === items[i]) {\n          if (i === 0) {\n            setChecked(items[len - 1]);\n          } else {\n            setChecked(items[i - 1]);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  function setFirstChecked() {\n    if (internalRef instanceof HTMLElement) {\n      const items = queryMenuItems(internalRef, ownerID);\n      setChecked(items[0]);\n    }\n  }\n\n  function setLastChecked() {\n    if (internalRef instanceof HTMLElement) {\n      const items = queryMenuItems(internalRef, ownerID);\n      setChecked(items[items.length - 1]);\n    }\n  }\n\n  function setFirstMatch(character: string) {\n    if (internalRef instanceof HTMLElement) {\n      const items = queryMenuItems(internalRef, ownerID);\n      const lower = character.toLowerCase();\n      for (let i = 0, l = items.length; i < l; i += 1) {\n        if (items[i].textContent?.toLowerCase().startsWith(lower)) {\n          setChecked(items[i]);\n          return;\n        }\n      }\n    }\n  }\n\n  return (\n    <MenuContext.Provider\n      value={{\n        ownerID,\n        setChecked,\n        setFirstChecked,\n        setLastChecked,\n        setNextChecked,\n        setPrevChecked,\n        setFirstMatch,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'as',\n          'ref',\n        ])}\n        id={ownerID}\n        role=\"menu\"\n        data-sh-menu={ownerID}\n        ref={createRef(props, (e) => {\n          internalRef = e;\n        })}\n      />\n    </MenuContext.Provider>\n  );\n}\n\nexport type MenuItemProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n}\n  & MenuChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof MenuChildProps>;\n\nexport function MenuItem<T extends ValidConstructor = 'li'>(\n  props: MenuItemProps<T>,\n): JSX.Element {\n  const context = useMenuContext('Menu');\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  let characters = '';\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n\n  onCleanup(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!props.disabled) {\n          switch (e.key) {\n            case 'ArrowUp':\n            case 'ArrowLeft':\n              e.preventDefault();\n              context.setPrevChecked(ref);\n              break;\n            case 'ArrowDown':\n            case 'ArrowRight':\n              e.preventDefault();\n              context.setNextChecked(ref);\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              ref.click();\n              break;\n            case 'Home':\n              e.preventDefault();\n              context.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              context.setLastChecked();\n              break;\n            default:\n              if (e.key.length === 1) {\n                characters = `${characters}${e.key}`;\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                timeout = setTimeout(() => {\n                  context.setFirstMatch(characters);\n                  characters = '';\n                }, 100);\n              }\n              break;\n          }\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      {...omitProps(props, [\n        'as',\n        'disabled',\n        'ref',\n      ])}\n      disabled={props.disabled}\n      role=\"menuitem\"\n      tabindex={-1}\n      aria-disabled={props.disabled}\n      data-sh-menu-item={context.ownerID}\n      data-sh-disabled={props.disabled}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <MenuChild disabled={!!props.disabled}>\n        {props.children}\n      </MenuChild>\n    </Dynamic>\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  onCleanup,\n  Show,\n  useContext,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport getFocusableElements from '../utils/get-focusable-elements';\n\ninterface ContextMenuContext {\n  ownerID: string;\n  boundaryID: string;\n  panelID: string;\n  anchor?: HTMLElement | null;\n}\n\nconst ContextMenuContext = createContext<ContextMenuContext>();\n\nfunction useContextMenuContext(componentName: string): ContextMenuContext {\n  const context = useContext(ContextMenuContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <ContextMenu>`);\n}\n\nexport type ContextMenuProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  onOpen?: () => void;\n  onClose?: () => void;\n} & Omit<HeadlessDisclosureRootProps, 'CONTROLLED'>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps>;\n\nexport function ContextMenu<T extends ValidConstructor = 'div'>(\n  props: ContextMenuProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const boundaryID = createUniqueId();\n  const panelID = createUniqueId();\n\n  let returnElement: HTMLElement | null = null;\n  if (typeof document !== 'undefined') {\n    returnElement = document.activeElement as HTMLElement | null;\n  }\n\n  onCleanup(() => {\n    returnElement?.focus();\n  });\n\n  return (\n    <ContextMenuContext.Provider\n      value={{\n        ownerID,\n        boundaryID,\n        panelID,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'isOpen',\n          'as',\n          'children',\n          'disabled',\n          'defaultOpen',\n          'onChange',\n        ])}\n        disabled={props.disabled}\n        aria-disabled={props.disabled}\n        data-sh-disabled={props.disabled}\n        data-sh-context-menu={ownerID}\n      >\n        <HeadlessDisclosureRoot\n          CONTROLLED={'isOpen' in props}\n          isOpen={props.isOpen}\n          onChange={(value) => {\n            props.onChange?.(value);\n            if (!value) {\n              returnElement?.focus();\n              props.onClose?.();\n            } else {\n              returnElement = document.activeElement as HTMLElement | null;\n              props.onOpen?.();\n            }\n          }}\n          disabled={props.disabled}\n          defaultOpen={props.defaultOpen}\n        >\n          {props.children}\n        </HeadlessDisclosureRoot>\n      </Dynamic>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport type ContextMenuBoundaryProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function ContextMenuBoundary<T extends ValidConstructor = 'div'>(\n  props: ContextMenuBoundaryProps<T>,\n): JSX.Element {\n  const context = useContextMenuContext('ContextMenuBoundary');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const toggle = (e: MouseEvent) => {\n        if (!properties.disabled()) {\n          e.preventDefault();\n          properties.setState(true);\n        }\n      };\n\n      ref.addEventListener('contextmenu', toggle);\n\n      onCleanup(() => {\n        ref.removeEventListener('contextmenu', toggle);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={props.as ?? 'div'}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      id={context.boundaryID}\n      aria-disabled={properties.disabled()}\n      aria-expanded={properties.isOpen()}\n      aria-controls={properties.isOpen() && context.panelID}\n      data-sh-disabled={properties.disabled()}\n      data-sh-expanded={properties.isOpen()}\n      disabled={properties.disabled()}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n        if (e instanceof HTMLElement) {\n          context.anchor = e;\n        }\n      })}\n      data-sh-context-menu-boundary={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type ContextMenuPanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function ContextMenuPanel<T extends ValidConstructor = 'div'>(\n  props: ContextMenuPanelProps<T>,\n): JSX.Element {\n  const context = useContextMenuContext('ContextMenuPanel');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              const nodes = getFocusableElements(ref);\n              if (e.shiftKey) {\n                if (!document.activeElement || !ref.contains(document.activeElement)) {\n                  nodes[nodes.length - 1].focus();\n                } else {\n                  for (let i = 0, len = nodes.length; i < len; i += 1) {\n                    if (document.activeElement === nodes[i]) {\n                      if (i === 0) {\n                        nodes[len - 1].focus();\n                      } else {\n                        nodes[i - 1].focus();\n                      }\n                      break;\n                    }\n                  }\n                }\n              } else if (!document.activeElement || !ref.contains(document.activeElement)) {\n                nodes[0].focus();\n              } else {\n                for (let i = 0, len = nodes.length; i < len; i += 1) {\n                  if (document.activeElement === nodes[i]) {\n                    if (i === len - 1) {\n                      nodes[0].focus();\n                    } else {\n                      nodes[i + 1].focus();\n                    }\n                    break;\n                  }\n                }\n              }\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        const onClickOutside = (e: FocusEvent) => {\n          if (!ref.contains(e.target as Node)) {\n            properties.setState(false);\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        document.addEventListener('click', onClickOutside);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n          document.removeEventListener('click', onClickOutside);\n        });\n      }\n    }\n  });\n\n  return (\n    <Show\n      when={props.unmount ?? true}\n      fallback={(\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'unmount',\n            'children',\n            'ref',\n          ])}\n          id={context.panelID}\n          data-sh-context-menu-panel={context.ownerID}\n          ref={createRef(props, (e) => {\n            setInternalRef(() => e);\n          })}\n        >\n          <HeadlessDisclosureChild>\n            {props.children}\n          </HeadlessDisclosureChild>\n        </Dynamic>\n      )}\n    >\n      <Show when={properties.isOpen()}>\n        <Dynamic\n          component={props.as ?? 'div'}\n          {...omitProps(props, [\n            'as',\n            'unmount',\n            'children',\n            'ref',\n          ])}\n          id={context.panelID}\n          data-sh-context-menu-panel={context.ownerID}\n          ref={createRef(props, (e) => {\n            setInternalRef(() => e);\n          })}\n        >\n          <HeadlessDisclosureChild>\n            {props.children}\n          </HeadlessDisclosureChild>\n        </Dynamic>\n      </Show>\n    </Show>\n  );\n}\n\nexport type ContextMenuOverlayProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function ContextMenuOverlay<T extends ValidConstructor = 'div'>(\n  props: ContextMenuOverlayProps<T>,\n): JSX.Element {\n  const context = useContextMenuContext('ContextMenuOverlay');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      data-sh-context-menu-overlay={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createUniqueId,\n  useContext,\n  onCleanup,\n  createSignal,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport getFocusableElements from '../utils/get-focusable-elements';\nimport { queryFeedArticles } from '../utils/query-nodes';\n\ninterface FeedContext {\n  ownerID: string;\n  labelID: string;\n  contentID: string;\n  size: number;\n  busy: boolean;\n  focusPrev: () => void;\n  focusNext: () => void;\n}\n\nconst FeedContext = createContext<FeedContext>();\n\nfunction useFeedContext(componentName: string): FeedContext {\n  const context = useContext(FeedContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Feed>`);\n}\n\ninterface FeedContentContext {\n  focusPrev: (el: Element) => void;\n  focusNext: (el: Element) => void;\n}\n\nconst FeedContentContext = createContext<FeedContentContext>();\n\nfunction useFeedContentContext(componentName: string): FeedContentContext {\n  const context = useContext(FeedContentContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <FeedContent>`);\n}\n\ninterface FeedArticleContext {\n  ownerID: string;\n  labelID: string;\n  descriptionID: string;\n}\n\nconst FeedArticleContext = createContext<FeedArticleContext>();\n\nfunction useFeedArticleContext(componentName: string): FeedArticleContext {\n  const context = useContext(FeedArticleContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <FeedArticle>`);\n}\n\nexport type FeedProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  size: number;\n  busy?: boolean;\n} & WithRef<T> & Omit<DynamicProps<T>, 'size' | 'busy'>;\n\nexport function Feed<T extends ValidConstructor = 'div'>(\n  props: FeedProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const contentID = createUniqueId();\n\n  let internalRef: DynamicNode<T>;\n\n  return (\n    <FeedContext.Provider\n      value={{\n        ownerID,\n        labelID,\n        contentID,\n        get size() {\n          return props.size;\n        },\n        get busy() {\n          return !!props.busy;\n        },\n        focusNext() {\n          const nodes = getFocusableElements(document.documentElement);\n          for (let i = 0, len = nodes.length; i < len; i += 1) {\n            if (internalRef === nodes[i]) {\n              if (i === len - 1) {\n                nodes[0].focus();\n              } else {\n                nodes[i + 1].focus();\n              }\n              break;\n            }\n          }\n        },\n        focusPrev() {\n          const nodes = getFocusableElements(document.documentElement);\n          for (let i = 0, len = nodes.length; i < len; i += 1) {\n            if (internalRef === nodes[i]) {\n              if (i === 0) {\n                nodes[len - 1].focus();\n              } else {\n                nodes[i - 1].focus();\n              }\n              break;\n            }\n          }\n        },\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'div'}\n        {...omitProps(props, [\n          'as',\n          'busy',\n          'size',\n        ])}\n        id={ownerID}\n        data-sh-feed={ownerID}\n        ref={createRef(props, (e) => {\n          internalRef = e;\n        })}\n      />\n    </FeedContext.Provider>\n  );\n}\n\nexport type FeedLabelProps<T extends ValidConstructor = 'span'> = {\n  as?: T;\n} & DynamicProps<T>;\n\nexport function FeedLabel<T extends ValidConstructor = 'span'>(\n  props: FeedLabelProps<T>,\n): JSX.Element {\n  const context = useFeedContext('FeedLabel');\n  return (\n    <Dynamic\n      component={(props.as ?? 'span') as T}\n      {...omitProps(props, [\n        'as',\n      ])}\n      id={context.labelID}\n      data-sh-feed-label={context.ownerID}\n    />\n  );\n}\n\nexport type FeedContentProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & WithRef<T> & DynamicProps<T>;\n\nexport function FeedContent<T extends ValidConstructor = 'div'>(\n  props: FeedContentProps<T>,\n): JSX.Element {\n  const context = useFeedContext('FeedContent');\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  function setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  function focusNext(node: Element) {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const articles = queryFeedArticles(ref, context.ownerID);\n      for (let i = 0, len = articles.length; i < len; i += 1) {\n        if (node === articles[i] && i + 1 < len) {\n          setChecked(articles[i + 1]);\n          break;\n        }\n      }\n    }\n  }\n\n  function focusPrev(node: Element) {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const articles = queryFeedArticles(ref, context.ownerID);\n      for (let i = 0, len = articles.length; i < len; i += 1) {\n        if (node === articles[i] && i - 1 >= 0) {\n          setChecked(articles[i - 1]);\n          break;\n        }\n      }\n    }\n  }\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (e.ctrlKey) {\n          switch (e.key) {\n            case 'Home':\n              context.focusPrev();\n              break;\n            case 'End':\n              context.focusNext();\n              break;\n            default:\n              break;\n          }\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  return (\n    <FeedContentContext.Provider\n      value={{\n        focusNext,\n        focusPrev,\n      }}\n    >\n      <Dynamic\n        component={(props.as ?? 'div') as T}\n        {...omitProps(props, [\n          'as',\n        ])}\n        id={context.contentID}\n        role=\"feed\"\n        aria-labelledby={context.labelID}\n        aria-busy={context.busy}\n        data-sh-feed-content={context.ownerID}\n        ref={createRef<T>(props, (e) => {\n          setInternalRef(() => e);\n        })}\n      />\n    </FeedContentContext.Provider>\n  );\n}\n\nexport type FeedArticleProps<T extends ValidConstructor = 'article'> = {\n  as?: T;\n  index: number;\n} & WithRef<T> & Omit<DynamicProps<T>, 'index'>;\n\nexport function FeedArticle<T extends ValidConstructor = 'article'>(\n  props: FeedArticleProps<T>,\n): JSX.Element {\n  const rootContext = useFeedContext('FeedArticle');\n  const contentContext = useFeedContentContext('FeedArticle');\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        switch (e.key) {\n          case 'PageUp':\n            contentContext.focusPrev(ref);\n            break;\n          case 'PageDown':\n            contentContext.focusNext(ref);\n            break;\n          default:\n            break;\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  return (\n    <FeedArticleContext.Provider\n      value={{\n        ownerID,\n        labelID,\n        descriptionID,\n      }}\n    >\n      <Dynamic\n        component={props.as ?? 'article'}\n        {...omitProps(props, [\n          'as',\n        ])}\n        id={ownerID}\n        aria-posinset={props.index + 1}\n        aria-setsize={rootContext.size}\n        aria-labelledby={labelID}\n        aria-describedby={descriptionID}\n        data-sh-feed-article={rootContext.ownerID}\n        tabindex={0}\n        ref={createRef<T>(props, (e) => {\n          setInternalRef(() => e);\n        })}\n      />\n    </FeedArticleContext.Provider>\n  );\n}\n\nexport type FeedArticleLabelProps<T extends ValidConstructor = 'span'> = {\n  as?: T;\n} & DynamicProps<T>;\n\nexport function FeedArticleLabel<T extends ValidConstructor = 'span'>(\n  props: FeedArticleLabelProps<T>,\n): JSX.Element {\n  const context = useFeedArticleContext('FeedArticleLabel');\n  return (\n    <Dynamic\n      component={(props.as ?? 'span') as T}\n      {...omitProps(props, [\n        'as',\n      ])}\n      id={context.labelID}\n      data-sh-feed-article-label={context.ownerID}\n    />\n  );\n}\n\nexport type FeedArticleDescriptionProps<T extends ValidConstructor = 'p'> = {\n  as?: T;\n} & DynamicProps<T>;\n\nexport function FeedArticleDescription<T extends ValidConstructor = 'p'>(\n  props: FeedArticleDescriptionProps<T>,\n): JSX.Element {\n  const context = useFeedArticleContext('FeedArticleDescription');\n  return (\n    <Dynamic\n      component={(props.as ?? 'p') as T}\n      {...omitProps(props, [\n        'as',\n      ])}\n      id={context.descriptionID}\n      role=\"feed\"\n      data-sh-feed-article-description={context.ownerID}\n    />\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createUniqueId,\n  useContext,\n  Show,\n  onCleanup,\n  createSignal,\n  JSX,\n} from 'solid-js';\nimport {\n  Dynamic,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChild,\n  HeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootProps,\n  useHeadlessDisclosureChild,\n} from '../headless/Disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  ValidConstructor,\n  WithRef,\n} from '../utils/dynamic-prop';\nimport getFocusableElements from '../utils/get-focusable-elements';\n\ninterface CommandBarContext {\n  ownerID: string;\n  panelID: string;\n  titleID: string;\n  descriptionID: string;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nconst CommandBarContext = createContext<CommandBarContext>();\n\nfunction useCommandBarContext(componentName: string): CommandBarContext {\n  const context = useContext(CommandBarContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <CommandBar>`);\n}\n\nexport type CommandBarProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n  unmount?: boolean;\n  onClose?: () => void;\n  onOpen?: () => void;\n} & HeadlessDisclosureRootProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureRootProps | 'unmount'>;\n\nfunction CommandBarEvents(props: { children: JSX.Element }): JSX.Element {\n  const properties = useHeadlessDisclosureChild();\n\n  createEffect(() => {\n    const onKeyDown = (ev: KeyboardEvent) => {\n      if ((ev.metaKey || ev.ctrlKey) && ev.key === 'k' && ev.defaultPrevented === false) {\n        ev.preventDefault();\n        properties.setState(true);\n      }\n    };\n\n    window.addEventListener('keydown', onKeyDown);\n    onCleanup(() => {\n      window.removeEventListener('keydown', onKeyDown);\n    });\n  });\n\n  return () => props.children;\n}\n\nexport function CommandBar<T extends ValidConstructor = 'div'>(\n  props: CommandBarProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  let returnElement: HTMLElement | null = null;\n  if (typeof document !== 'undefined') {\n    returnElement = document.activeElement as HTMLElement | null;\n  }\n\n  onCleanup(() => {\n    returnElement?.focus();\n  });\n\n  return (\n    <CommandBarContext.Provider\n      value={{\n        ownerID,\n        panelID,\n        titleID,\n        descriptionID,\n      }}\n    >\n      <HeadlessDisclosureRoot\n        CONTROLLED={'isOpen' in props}\n        isOpen={props.isOpen}\n        onChange={(value) => {\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            returnElement?.focus();\n          } else {\n            returnElement = document.activeElement as HTMLElement | null;\n            props.onOpen?.();\n          }\n        }}\n        defaultOpen={props.defaultOpen}\n        disabled={props.disabled}\n      >\n        {({ isOpen }) => (\n          <CommandBarEvents>\n            <Show\n              when={props.unmount ?? true}\n              fallback={(\n                <Dynamic\n                  component={props.as ?? 'div'}\n                  {...omitProps(props, [\n                    'as',\n                    'children',\n                    'defaultOpen',\n                    'unmount',\n                    'isOpen',\n                    'disabled',\n                    'onClose',\n                    'onChange',\n                  ])}\n                  id={ownerID}\n                  role=\"dialog\"\n                  aria-modal\n                  aria-labelledby={titleID}\n                  aria-describedby={descriptionID}\n                  data-sh-command-bar={ownerID}\n                >\n                  <HeadlessDisclosureChild>\n                    {props.children}\n                  </HeadlessDisclosureChild>\n                </Dynamic>\n              )}\n            >\n              <Show when={isOpen()}>\n                <Dynamic\n                  component={props.as ?? 'div'}\n                  {...omitProps(props, [\n                    'as',\n                    'children',\n                    'defaultOpen',\n                    'unmount',\n                    'isOpen',\n                    'disabled',\n                    'onClose',\n                    'onChange',\n                  ])}\n                  id={ownerID}\n                  role=\"dialog\"\n                  aria-modal\n                  aria-labelledby={titleID}\n                  aria-describedby={descriptionID}\n                  data-sh-command-bar={ownerID}\n                >\n                  <HeadlessDisclosureChild>\n                    {props.children}\n                  </HeadlessDisclosureChild>\n                </Dynamic>\n              </Show>\n            </Show>\n          </CommandBarEvents>\n        )}\n      </HeadlessDisclosureRoot>\n    </CommandBarContext.Provider>\n  );\n}\n\nexport type CommandBarTitleProps<T extends ValidConstructor = 'h2'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function CommandBarTitle<T extends ValidConstructor = 'h2'>(\n  props: CommandBarTitleProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarTitle');\n  return (\n    <Dynamic\n      component={(props.as ?? 'h2') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.titleID}\n      data-sh-command-bar-title={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type CommandBarPanelProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function CommandBarPanel<T extends ValidConstructor = 'div'>(\n  props: CommandBarPanelProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarPanel');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        const initialNodes = getFocusableElements(ref);\n        if (initialNodes.length) {\n          initialNodes[0].focus();\n        }\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              const nodes = getFocusableElements(ref);\n              if (e.shiftKey) {\n                if (!document.activeElement || !ref.contains(document.activeElement)) {\n                  nodes[nodes.length - 1].focus();\n                } else {\n                  for (let i = 0, len = nodes.length; i < len; i += 1) {\n                    if (document.activeElement === nodes[i]) {\n                      if (i === 0) {\n                        nodes[len - 1].focus();\n                      } else {\n                        nodes[i - 1].focus();\n                      }\n                      break;\n                    }\n                  }\n                }\n              } else if (!document.activeElement || !ref.contains(document.activeElement)) {\n                nodes[0].focus();\n              } else {\n                for (let i = 0, len = nodes.length; i < len; i += 1) {\n                  if (document.activeElement === nodes[i]) {\n                    if (i === len - 1) {\n                      nodes[0].focus();\n                    } else {\n                      nodes[i + 1].focus();\n                    }\n                    break;\n                  }\n                }\n              }\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      id={context.panelID}\n      data-sh-command-bar-panel={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type CommandBarOverlayProps<T extends ValidConstructor = 'div'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & WithRef<T>\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function CommandBarOverlay<T extends ValidConstructor = 'p'>(\n  props: CommandBarOverlayProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarOverlay');\n  const properties = useHeadlessDisclosureChild();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'div') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ])}\n      data-sh-command-bar-overlay={context.ownerID}\n      ref={createRef(props, (e) => {\n        setInternalRef(() => e);\n      })}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n\nexport type CommandBarDescriptionProps<T extends ValidConstructor = 'p'> = {\n  as?: T;\n} & HeadlessDisclosureChildProps\n  & Omit<DynamicProps<T>, keyof HeadlessDisclosureChildProps>;\n\nexport function CommandBarDescription<T extends ValidConstructor = 'p'>(\n  props: CommandBarDescriptionProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarDescription');\n\n  return (\n    <Dynamic\n      component={(props.as ?? 'p') as T}\n      {...omitProps(props, [\n        'as',\n        'children',\n      ])}\n      id={context.descriptionID}\n      data-sh-command-bar-description={context.ownerID}\n    >\n      <HeadlessDisclosureChild>\n        {props.children}\n      </HeadlessDisclosureChild>\n    </Dynamic>\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createMemo,\n  onCleanup,\n  useContext,\n} from 'solid-js';\nimport {\n  JSX,\n} from 'solid-js/jsx-runtime';\nimport {\n  usePageVisibility,\n  usePrefersDark,\n} from 'solid-use';\nimport useControlledSignal from '../utils/use-controlled-signal';\n\nexport type NativeColorScheme = 'light' | 'dark';\nexport type ColorScheme = NativeColorScheme | 'system';\n\nexport interface ColorSchemeProviderProps {\n  initialValue?: ColorScheme;\n  value?: ColorScheme;\n  onChange?: (scheme: ColorScheme) => void;\n  children?: JSX.Element;\n}\n\ninterface ColorSchemeContext {\n  value: ColorScheme;\n  setValue: (newScheme: ColorScheme) => void;\n  native: NativeColorScheme;\n  preferred: NativeColorScheme;\n}\n\nconst ColorSchemeContext = createContext<ColorSchemeContext>();\n\nconst STORAGE_KEY = 'theme-preference';\n\nexport function ColorSchemeProvider(props: ColorSchemeProviderProps) {\n  const [get, set] = useControlledSignal<ColorScheme>(\n    props.initialValue ?? 'system',\n    'value' in props ? (() => props.value ?? 'system') : undefined,\n    (value) => props.onChange?.(value),\n  );\n\n  const prefersDark = usePrefersDark();\n  const isVisible = usePageVisibility();\n\n  const shouldToggle = createMemo(() => (\n    (get() === 'system' && prefersDark()) || (get() === 'dark')\n  ));\n\n  // Since storage events only work for other windows\n  // we need to make the main window sync\n  createEffect(() => {\n    isVisible();\n\n    const onChange = () => {\n      const value = localStorage.getItem(STORAGE_KEY);\n\n      if (value) {\n        set(value as ColorScheme);\n      } else {\n        set('system');\n      }\n    };\n    window.addEventListener('storage', onChange, false);\n\n    onChange();\n\n    onCleanup(() => {\n      window.removeEventListener('storage', onChange, false);\n    });\n  });\n\n  // Sync storage when signal changes\n  createEffect(() => {\n    localStorage.setItem(STORAGE_KEY, get());\n  });\n\n  // Sync document class\n  createEffect(() => {\n    document.documentElement.classList.toggle(\n      'dark',\n      shouldToggle(),\n    );\n  });\n\n  return (\n    <ColorSchemeContext.Provider\n      value={{\n        get value() {\n          return get();\n        },\n        setValue(val) {\n          set(val);\n        },\n        get preferred() {\n          return shouldToggle() ? 'dark' : 'light';\n        },\n        get native() {\n          return prefersDark() ? 'dark' : 'light';\n        },\n      }}\n    >\n      {props.children}\n    </ColorSchemeContext.Provider>\n  );\n}\n\nfunction useColorSchemeContext(): ColorSchemeContext {\n  const ctx = useContext(ColorSchemeContext);\n  if (ctx) {\n    return ctx;\n  }\n  throw new Error('Missing <ColorSchemeProvider>');\n}\n\nexport function useColorScheme(): [() => ColorScheme, (newScheme: ColorScheme) => void] {\n  const ctx = useColorSchemeContext();\n  return [\n    () => ctx.value,\n    ctx.setValue,\n  ];\n}\n\nexport function useNativeColorScheme(): () => NativeColorScheme {\n  const ctx = useColorSchemeContext();\n  return () => ctx.native;\n}\n\nexport function usePreferredColorScheme(): () => NativeColorScheme {\n  const ctx = useColorSchemeContext();\n  return () => ctx.preferred;\n}\n"],
  "mappings": "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",
  "names": []
}
